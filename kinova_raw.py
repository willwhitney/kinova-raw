# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_kinova_raw', [dirname(__file__)])
        except ImportError:
            import _kinova_raw
            return _kinova_raw
        if fp is not None:
            try:
                _mod = imp.load_module('_kinova_raw', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _kinova_raw = swig_import_helper()
    del swig_import_helper
else:
    import _kinova_raw
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



_kinova_raw.ROBOT_CONFIG_ERROR_swigconstant(_kinova_raw)
ROBOT_CONFIG_ERROR = _kinova_raw.ROBOT_CONFIG_ERROR

_kinova_raw.ROBOT_CONFIG_GENERIC_ROBOT_swigconstant(_kinova_raw)
ROBOT_CONFIG_GENERIC_ROBOT = _kinova_raw.ROBOT_CONFIG_GENERIC_ROBOT

_kinova_raw.ROBOT_CONFIG_JACOV1_ASSISTIVE_swigconstant(_kinova_raw)
ROBOT_CONFIG_JACOV1_ASSISTIVE = _kinova_raw.ROBOT_CONFIG_JACOV1_ASSISTIVE

_kinova_raw.ROBOT_CONFIG_MICO_6DOF_SERVICE_swigconstant(_kinova_raw)
ROBOT_CONFIG_MICO_6DOF_SERVICE = _kinova_raw.ROBOT_CONFIG_MICO_6DOF_SERVICE

_kinova_raw.ROBOT_CONFIG_MICO_4DOF_SERVICE_swigconstant(_kinova_raw)
ROBOT_CONFIG_MICO_4DOF_SERVICE = _kinova_raw.ROBOT_CONFIG_MICO_4DOF_SERVICE

_kinova_raw.ROBOT_CONFIG_JACOV2_6DOF_SERVICE_swigconstant(_kinova_raw)
ROBOT_CONFIG_JACOV2_6DOF_SERVICE = _kinova_raw.ROBOT_CONFIG_JACOV2_6DOF_SERVICE

_kinova_raw.ROBOT_CONFIG_JACOV2_4DOF_SERVICE_swigconstant(_kinova_raw)
ROBOT_CONFIG_JACOV2_4DOF_SERVICE = _kinova_raw.ROBOT_CONFIG_JACOV2_4DOF_SERVICE

_kinova_raw.ROBOT_CONFIG_MICO_6DOF_ASSISTIVE_swigconstant(_kinova_raw)
ROBOT_CONFIG_MICO_6DOF_ASSISTIVE = _kinova_raw.ROBOT_CONFIG_MICO_6DOF_ASSISTIVE

_kinova_raw.ROBOT_CONFIG_JACOV2_6DOF_ASSISTIVE_swigconstant(_kinova_raw)
ROBOT_CONFIG_JACOV2_6DOF_ASSISTIVE = _kinova_raw.ROBOT_CONFIG_JACOV2_6DOF_ASSISTIVE

_kinova_raw.ROBOT_CONFIG_SPHERICAL_6DOF_SERVICE_swigconstant(_kinova_raw)
ROBOT_CONFIG_SPHERICAL_6DOF_SERVICE = _kinova_raw.ROBOT_CONFIG_SPHERICAL_6DOF_SERVICE

_kinova_raw.ROBOT_CONFIG_SPHERICAL_7DOF_SERVICE_swigconstant(_kinova_raw)
ROBOT_CONFIG_SPHERICAL_7DOF_SERVICE = _kinova_raw.ROBOT_CONFIG_SPHERICAL_7DOF_SERVICE

_kinova_raw.eRobotType_Error_swigconstant(_kinova_raw)
eRobotType_Error = _kinova_raw.eRobotType_Error

_kinova_raw.eRobotType_GenericRobot_swigconstant(_kinova_raw)
eRobotType_GenericRobot = _kinova_raw.eRobotType_GenericRobot

_kinova_raw.eRobotType_JACOV1_Service_swigconstant(_kinova_raw)
eRobotType_JACOV1_Service = _kinova_raw.eRobotType_JACOV1_Service

_kinova_raw.eRobotType_Mico6Dof_Service_swigconstant(_kinova_raw)
eRobotType_Mico6Dof_Service = _kinova_raw.eRobotType_Mico6Dof_Service

_kinova_raw.eRobotType_Mico4Dof_Service_swigconstant(_kinova_raw)
eRobotType_Mico4Dof_Service = _kinova_raw.eRobotType_Mico4Dof_Service

_kinova_raw.eRobotType_JacoV2_6Dof_Service_swigconstant(_kinova_raw)
eRobotType_JacoV2_6Dof_Service = _kinova_raw.eRobotType_JacoV2_6Dof_Service

_kinova_raw.eRobotType_Mico_6DOF_Assistive_swigconstant(_kinova_raw)
eRobotType_Mico_6DOF_Assistive = _kinova_raw.eRobotType_Mico_6DOF_Assistive

_kinova_raw.eRobotType_JacoV2_6DOF_Assistive_swigconstant(_kinova_raw)
eRobotType_JacoV2_6DOF_Assistive = _kinova_raw.eRobotType_JacoV2_6DOF_Assistive

_kinova_raw.eRobotType_Spherical_6DOF_Service_swigconstant(_kinova_raw)
eRobotType_Spherical_6DOF_Service = _kinova_raw.eRobotType_Spherical_6DOF_Service

_kinova_raw.eRobotType_Spherical_7DOF_Service_swigconstant(_kinova_raw)
eRobotType_Spherical_7DOF_Service = _kinova_raw.eRobotType_Spherical_7DOF_Service

_kinova_raw.MAXACTUATORNUMBER_swigconstant(_kinova_raw)
MAXACTUATORNUMBER = _kinova_raw.MAXACTUATORNUMBER

_kinova_raw.JOYSTICK_BUTTON_COUNT_swigconstant(_kinova_raw)
JOYSTICK_BUTTON_COUNT = _kinova_raw.JOYSTICK_BUTTON_COUNT

_kinova_raw.NB_ADVANCE_RETRACT_POSITION_swigconstant(_kinova_raw)
NB_ADVANCE_RETRACT_POSITION = _kinova_raw.NB_ADVANCE_RETRACT_POSITION

_kinova_raw.ERROR_DATA_COUNT_MAX_swigconstant(_kinova_raw)
ERROR_DATA_COUNT_MAX = _kinova_raw.ERROR_DATA_COUNT_MAX

_kinova_raw.ERROR_LAYER_COUNT_swigconstant(_kinova_raw)
ERROR_LAYER_COUNT = _kinova_raw.ERROR_LAYER_COUNT

_kinova_raw.LEGACY_CONFIG_NB_ZONES_MAX_swigconstant(_kinova_raw)
LEGACY_CONFIG_NB_ZONES_MAX = _kinova_raw.LEGACY_CONFIG_NB_ZONES_MAX

_kinova_raw.LEGACY_CONFIG_NB_POINTS_COUNT_swigconstant(_kinova_raw)
LEGACY_CONFIG_NB_POINTS_COUNT = _kinova_raw.LEGACY_CONFIG_NB_POINTS_COUNT

_kinova_raw.CONTROL_MAPPING_COUNT_swigconstant(_kinova_raw)
CONTROL_MAPPING_COUNT = _kinova_raw.CONTROL_MAPPING_COUNT

_kinova_raw.MODE_MAP_COUNT_swigconstant(_kinova_raw)
MODE_MAP_COUNT = _kinova_raw.MODE_MAP_COUNT

_kinova_raw.STICK_EVENT_COUNT_swigconstant(_kinova_raw)
STICK_EVENT_COUNT = _kinova_raw.STICK_EVENT_COUNT

_kinova_raw.BUTTON_EVENT_COUNT_swigconstant(_kinova_raw)
BUTTON_EVENT_COUNT = _kinova_raw.BUTTON_EVENT_COUNT

_kinova_raw.STRING_LENGTH_swigconstant(_kinova_raw)
STRING_LENGTH = _kinova_raw.STRING_LENGTH

_kinova_raw.JACO_FINGERS_COUNT_swigconstant(_kinova_raw)
JACO_FINGERS_COUNT = _kinova_raw.JACO_FINGERS_COUNT

_kinova_raw.ERROR_UNKNOWFILE_swigconstant(_kinova_raw)
ERROR_UNKNOWFILE = _kinova_raw.ERROR_UNKNOWFILE

_kinova_raw.ERROR_MEMORY_swigconstant(_kinova_raw)
ERROR_MEMORY = _kinova_raw.ERROR_MEMORY

_kinova_raw.ERROR_FILEREADING_swigconstant(_kinova_raw)
ERROR_FILEREADING = _kinova_raw.ERROR_FILEREADING

_kinova_raw.NOMOVEMENT_POSITION_swigconstant(_kinova_raw)
NOMOVEMENT_POSITION = _kinova_raw.NOMOVEMENT_POSITION

_kinova_raw.CARTESIAN_POSITION_swigconstant(_kinova_raw)
CARTESIAN_POSITION = _kinova_raw.CARTESIAN_POSITION

_kinova_raw.ANGULAR_POSITION_swigconstant(_kinova_raw)
ANGULAR_POSITION = _kinova_raw.ANGULAR_POSITION

_kinova_raw.RETRACTED_swigconstant(_kinova_raw)
RETRACTED = _kinova_raw.RETRACTED

_kinova_raw.PREDEFINED1_swigconstant(_kinova_raw)
PREDEFINED1 = _kinova_raw.PREDEFINED1

_kinova_raw.PREDEFINED2_swigconstant(_kinova_raw)
PREDEFINED2 = _kinova_raw.PREDEFINED2

_kinova_raw.PREDEFINED3_swigconstant(_kinova_raw)
PREDEFINED3 = _kinova_raw.PREDEFINED3

_kinova_raw.CARTESIAN_VELOCITY_swigconstant(_kinova_raw)
CARTESIAN_VELOCITY = _kinova_raw.CARTESIAN_VELOCITY

_kinova_raw.ANGULAR_VELOCITY_swigconstant(_kinova_raw)
ANGULAR_VELOCITY = _kinova_raw.ANGULAR_VELOCITY

_kinova_raw.PREDEFINED4_swigconstant(_kinova_raw)
PREDEFINED4 = _kinova_raw.PREDEFINED4

_kinova_raw.PREDEFINED5_swigconstant(_kinova_raw)
PREDEFINED5 = _kinova_raw.PREDEFINED5

_kinova_raw.ANY_TRAJECTORY_swigconstant(_kinova_raw)
ANY_TRAJECTORY = _kinova_raw.ANY_TRAJECTORY

_kinova_raw.TIME_DELAY_swigconstant(_kinova_raw)
TIME_DELAY = _kinova_raw.TIME_DELAY

_kinova_raw.PERIPHERAL_PORT_ANY_swigconstant(_kinova_raw)
PERIPHERAL_PORT_ANY = _kinova_raw.PERIPHERAL_PORT_ANY

_kinova_raw.PERIPHERAL_PORT_CAN_INTERNAL_swigconstant(_kinova_raw)
PERIPHERAL_PORT_CAN_INTERNAL = _kinova_raw.PERIPHERAL_PORT_CAN_INTERNAL

_kinova_raw.PERIPHERAL_PORT_PORT_CAN_EXTERNAL_swigconstant(_kinova_raw)
PERIPHERAL_PORT_PORT_CAN_EXTERNAL = _kinova_raw.PERIPHERAL_PORT_PORT_CAN_EXTERNAL

_kinova_raw.PERIPHERAL_PORT_PORT_SPI_0_swigconstant(_kinova_raw)
PERIPHERAL_PORT_PORT_SPI_0 = _kinova_raw.PERIPHERAL_PORT_PORT_SPI_0

_kinova_raw.PERIPHERAL_PORT_PORT_SPI_1_swigconstant(_kinova_raw)
PERIPHERAL_PORT_PORT_SPI_1 = _kinova_raw.PERIPHERAL_PORT_PORT_SPI_1

_kinova_raw.PERIPHERAL_PORT_PORT_USB_swigconstant(_kinova_raw)
PERIPHERAL_PORT_PORT_USB = _kinova_raw.PERIPHERAL_PORT_PORT_USB

_kinova_raw.PERIPHERAL_PORT_PORT_UART_0_swigconstant(_kinova_raw)
PERIPHERAL_PORT_PORT_UART_0 = _kinova_raw.PERIPHERAL_PORT_PORT_UART_0

_kinova_raw.PERIPHERAL_PORT_PORT_UART_1_swigconstant(_kinova_raw)
PERIPHERAL_PORT_PORT_UART_1 = _kinova_raw.PERIPHERAL_PORT_PORT_UART_1

_kinova_raw.PERIPHERAL_PORT_PORT_UART_2_swigconstant(_kinova_raw)
PERIPHERAL_PORT_PORT_UART_2 = _kinova_raw.PERIPHERAL_PORT_PORT_UART_2

_kinova_raw.PERIPHERAL_PORT_PORT_VIRTUAL_swigconstant(_kinova_raw)
PERIPHERAL_PORT_PORT_VIRTUAL = _kinova_raw.PERIPHERAL_PORT_PORT_VIRTUAL

_kinova_raw.PERIPHERAL_TYPE_NONE_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_NONE = _kinova_raw.PERIPHERAL_TYPE_NONE

_kinova_raw.PERIPHERAL_TYPE_ANY_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_ANY = _kinova_raw.PERIPHERAL_TYPE_ANY

_kinova_raw.PERIPHERAL_TYPE_UNKNOWN_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_UNKNOWN = _kinova_raw.PERIPHERAL_TYPE_UNKNOWN

_kinova_raw.PERIPHERAL_TYPE_ACTUATOR_GENERIC_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_ACTUATOR_GENERIC = _kinova_raw.PERIPHERAL_TYPE_ACTUATOR_GENERIC

_kinova_raw.PERIPHERAL_TYPE_ACTUATOR_BIG_19NM_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_ACTUATOR_BIG_19NM = _kinova_raw.PERIPHERAL_TYPE_ACTUATOR_BIG_19NM

_kinova_raw.PERIPHERAL_TYPE_ACTUATOR_BIG_37NM_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_ACTUATOR_BIG_37NM = _kinova_raw.PERIPHERAL_TYPE_ACTUATOR_BIG_37NM

_kinova_raw.PERIPHERAL_TYPE_ACTUATOR_SMALL_7NM_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_ACTUATOR_SMALL_7NM = _kinova_raw.PERIPHERAL_TYPE_ACTUATOR_SMALL_7NM

_kinova_raw.PERIPHERAL_TYPE_ACTUATOR_K75_SINUS_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_ACTUATOR_K75_SINUS = _kinova_raw.PERIPHERAL_TYPE_ACTUATOR_K75_SINUS

_kinova_raw.PERIPHERAL_TYPE_ACTUATOR_K75PLUS_SINUS_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_ACTUATOR_K75PLUS_SINUS = _kinova_raw.PERIPHERAL_TYPE_ACTUATOR_K75PLUS_SINUS

_kinova_raw.PERIPHERAL_TYPE_ACTUATOR_K58_SINUS_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_ACTUATOR_K58_SINUS = _kinova_raw.PERIPHERAL_TYPE_ACTUATOR_K58_SINUS

_kinova_raw.PERIPHERAL_TYPE_ACTUATOR_A58_SINUS_AURIS_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_ACTUATOR_A58_SINUS_AURIS = _kinova_raw.PERIPHERAL_TYPE_ACTUATOR_A58_SINUS_AURIS

_kinova_raw.PERIPHERAL_TYPE_ACTUATOR_A75PLUS_SINUS_AURIS_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_ACTUATOR_A75PLUS_SINUS_AURIS = _kinova_raw.PERIPHERAL_TYPE_ACTUATOR_A75PLUS_SINUS_AURIS

_kinova_raw.PERIPHERAL_TYPE_ACTUATOR_A75_SINUS_AURIS_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_ACTUATOR_A75_SINUS_AURIS = _kinova_raw.PERIPHERAL_TYPE_ACTUATOR_A75_SINUS_AURIS

_kinova_raw.PERIPHERAL_TYPE_LINEAR_ACTUATOR_GENERIC_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_LINEAR_ACTUATOR_GENERIC = _kinova_raw.PERIPHERAL_TYPE_LINEAR_ACTUATOR_GENERIC

_kinova_raw.PERIPHERAL_TYPE_LINEAR_ACTUATOR_120N_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_LINEAR_ACTUATOR_120N = _kinova_raw.PERIPHERAL_TYPE_LINEAR_ACTUATOR_120N

_kinova_raw.PERIPHERAL_TYPE_JOYSTICK_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_JOYSTICK = _kinova_raw.PERIPHERAL_TYPE_JOYSTICK

_kinova_raw.PERIPHERAL_TYPE_VIRTUAL_JOYSTICK_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_VIRTUAL_JOYSTICK = _kinova_raw.PERIPHERAL_TYPE_VIRTUAL_JOYSTICK

_kinova_raw.PERIPHERAL_TYPE_KINOVA_JOYSTICK_3AXIS_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_KINOVA_JOYSTICK_3AXIS = _kinova_raw.PERIPHERAL_TYPE_KINOVA_JOYSTICK_3AXIS

_kinova_raw.PERIPHERAL_TYPE_UNIVERSAL_INTERFACE_V2_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_UNIVERSAL_INTERFACE_V2 = _kinova_raw.PERIPHERAL_TYPE_UNIVERSAL_INTERFACE_V2

_kinova_raw.PERIPHERAL_TYPE_CAN_INTERFACE_swigconstant(_kinova_raw)
PERIPHERAL_TYPE_CAN_INTERFACE = _kinova_raw.PERIPHERAL_TYPE_CAN_INTERFACE

_kinova_raw.HAND_NOMOVEMENT_swigconstant(_kinova_raw)
HAND_NOMOVEMENT = _kinova_raw.HAND_NOMOVEMENT

_kinova_raw.POSITION_MODE_swigconstant(_kinova_raw)
POSITION_MODE = _kinova_raw.POSITION_MODE

_kinova_raw.VELOCITY_MODE_swigconstant(_kinova_raw)
VELOCITY_MODE = _kinova_raw.VELOCITY_MODE

_kinova_raw.NO_FINGER_swigconstant(_kinova_raw)
NO_FINGER = _kinova_raw.NO_FINGER

_kinova_raw.ONE_FINGER_swigconstant(_kinova_raw)
ONE_FINGER = _kinova_raw.ONE_FINGER

_kinova_raw.TWO_FINGERS_swigconstant(_kinova_raw)
TWO_FINGERS = _kinova_raw.TWO_FINGERS

_kinova_raw.THREE_FINGERS_swigconstant(_kinova_raw)
THREE_FINGERS = _kinova_raw.THREE_FINGERS

_kinova_raw.RIGHTHAND_swigconstant(_kinova_raw)
RIGHTHAND = _kinova_raw.RIGHTHAND

_kinova_raw.LEFTHAND_swigconstant(_kinova_raw)
LEFTHAND = _kinova_raw.LEFTHAND

_kinova_raw.DIRECTTORQUE_swigconstant(_kinova_raw)
DIRECTTORQUE = _kinova_raw.DIRECTTORQUE

_kinova_raw.IMPEDANCEANGULAR_swigconstant(_kinova_raw)
IMPEDANCEANGULAR = _kinova_raw.IMPEDANCEANGULAR

_kinova_raw.IMPEDANCECARTESIAN_swigconstant(_kinova_raw)
IMPEDANCECARTESIAN = _kinova_raw.IMPEDANCECARTESIAN

_kinova_raw.POSITION_swigconstant(_kinova_raw)
POSITION = _kinova_raw.POSITION

_kinova_raw.TORQUE_swigconstant(_kinova_raw)
TORQUE = _kinova_raw.TORQUE

_kinova_raw.THREE_AXIS_JOYSTICK_swigconstant(_kinova_raw)
THREE_AXIS_JOYSTICK = _kinova_raw.THREE_AXIS_JOYSTICK

_kinova_raw.TWO_AXIS_JOYSTICK_swigconstant(_kinova_raw)
TWO_AXIS_JOYSTICK = _kinova_raw.TWO_AXIS_JOYSTICK

_kinova_raw.API_swigconstant(_kinova_raw)
API = _kinova_raw.API

_kinova_raw.EASY_RIDER_swigconstant(_kinova_raw)
EASY_RIDER = _kinova_raw.EASY_RIDER

_kinova_raw.UNIVERSAL_INTERFACE_swigconstant(_kinova_raw)
UNIVERSAL_INTERFACE = _kinova_raw.UNIVERSAL_INTERFACE

_kinova_raw.EXTERNAL_CUSTOMINTERFACE_swigconstant(_kinova_raw)
EXTERNAL_CUSTOMINTERFACE = _kinova_raw.EXTERNAL_CUSTOMINTERFACE

_kinova_raw.NONE_swigconstant(_kinova_raw)
NONE = _kinova_raw.NONE

_kinova_raw.OLED_DISPLAY_swigconstant(_kinova_raw)
OLED_DISPLAY = _kinova_raw.OLED_DISPLAY

_kinova_raw.CONTROL_TYPE_CARTESIAN_swigconstant(_kinova_raw)
CONTROL_TYPE_CARTESIAN = _kinova_raw.CONTROL_TYPE_CARTESIAN

_kinova_raw.CONTROL_TYPE_ANGULAR_swigconstant(_kinova_raw)
CONTROL_TYPE_ANGULAR = _kinova_raw.CONTROL_TYPE_ANGULAR

_kinova_raw.CONTROL_TYPE_UNKNOWN_swigconstant(_kinova_raw)
CONTROL_TYPE_UNKNOWN = _kinova_raw.CONTROL_TYPE_UNKNOWN

_kinova_raw.CONTROL_MODULE_NONE_swigconstant(_kinova_raw)
CONTROL_MODULE_NONE = _kinova_raw.CONTROL_MODULE_NONE

_kinova_raw.CONTROL_MODULE_ANGULAR_VELOCITY_swigconstant(_kinova_raw)
CONTROL_MODULE_ANGULAR_VELOCITY = _kinova_raw.CONTROL_MODULE_ANGULAR_VELOCITY

_kinova_raw.CONTROL_MODULE_ANGULAR_POSITION_swigconstant(_kinova_raw)
CONTROL_MODULE_ANGULAR_POSITION = _kinova_raw.CONTROL_MODULE_ANGULAR_POSITION

_kinova_raw.CONTROL_MODULE_CARTESIAN_VELOCITY_swigconstant(_kinova_raw)
CONTROL_MODULE_CARTESIAN_VELOCITY = _kinova_raw.CONTROL_MODULE_CARTESIAN_VELOCITY

_kinova_raw.CONTROL_MODULE_CARTESIAN_POSITION_swigconstant(_kinova_raw)
CONTROL_MODULE_CARTESIAN_POSITION = _kinova_raw.CONTROL_MODULE_CARTESIAN_POSITION

_kinova_raw.CONTROL_MODULE_RETRACT_swigconstant(_kinova_raw)
CONTROL_MODULE_RETRACT = _kinova_raw.CONTROL_MODULE_RETRACT

_kinova_raw.CONTROL_MODULE_TRAJECTORY_swigconstant(_kinova_raw)
CONTROL_MODULE_TRAJECTORY = _kinova_raw.CONTROL_MODULE_TRAJECTORY

_kinova_raw.CONTROL_MODULE_PREDEFINED_swigconstant(_kinova_raw)
CONTROL_MODULE_PREDEFINED = _kinova_raw.CONTROL_MODULE_PREDEFINED

_kinova_raw.CONTROL_MODULE_TIMEDELAY_swigconstant(_kinova_raw)
CONTROL_MODULE_TIMEDELAY = _kinova_raw.CONTROL_MODULE_TIMEDELAY

_kinova_raw.RETRACT_TYPE_NORMAL_TO_READY_swigconstant(_kinova_raw)
RETRACT_TYPE_NORMAL_TO_READY = _kinova_raw.RETRACT_TYPE_NORMAL_TO_READY

_kinova_raw.RETRACT_TYPE_READY_STANDBY_swigconstant(_kinova_raw)
RETRACT_TYPE_READY_STANDBY = _kinova_raw.RETRACT_TYPE_READY_STANDBY

_kinova_raw.RETRACT_TYPE_READY_TO_RETRACT_swigconstant(_kinova_raw)
RETRACT_TYPE_READY_TO_RETRACT = _kinova_raw.RETRACT_TYPE_READY_TO_RETRACT

_kinova_raw.RETRACT_TYPE_RETRACT_STANDBY_swigconstant(_kinova_raw)
RETRACT_TYPE_RETRACT_STANDBY = _kinova_raw.RETRACT_TYPE_RETRACT_STANDBY

_kinova_raw.RETRACT_TYPE_RETRACT_TO_READY_swigconstant(_kinova_raw)
RETRACT_TYPE_RETRACT_TO_READY = _kinova_raw.RETRACT_TYPE_RETRACT_TO_READY

_kinova_raw.RETRACT_TYPE_NORMAL_STANDBY_swigconstant(_kinova_raw)
RETRACT_TYPE_NORMAL_STANDBY = _kinova_raw.RETRACT_TYPE_NORMAL_STANDBY

_kinova_raw.RETRACT_TYPE_NOT_INITIALIZED_swigconstant(_kinova_raw)
RETRACT_TYPE_NOT_INITIALIZED = _kinova_raw.RETRACT_TYPE_NOT_INITIALIZED

_kinova_raw.RETRACT_ERROR_swigconstant(_kinova_raw)
RETRACT_ERROR = _kinova_raw.RETRACT_ERROR
class EthernetConfiguration(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    IPAddress = _swig_property(_kinova_raw.EthernetConfiguration_IPAddress_get, _kinova_raw.EthernetConfiguration_IPAddress_set)
    MacAddress = _swig_property(_kinova_raw.EthernetConfiguration_MacAddress_get, _kinova_raw.EthernetConfiguration_MacAddress_set)
    PortNumber = _swig_property(_kinova_raw.EthernetConfiguration_PortNumber_get, _kinova_raw.EthernetConfiguration_PortNumber_set)
    Subnet = _swig_property(_kinova_raw.EthernetConfiguration_Subnet_get, _kinova_raw.EthernetConfiguration_Subnet_set)
    Gateway = _swig_property(_kinova_raw.EthernetConfiguration_Gateway_get, _kinova_raw.EthernetConfiguration_Gateway_set)

    def __init__(self):
        this = _kinova_raw.new_EthernetConfiguration()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_EthernetConfiguration
    __del__ = lambda self: None
EthernetConfiguration_swigregister = _kinova_raw.EthernetConfiguration_swigregister
EthernetConfiguration_swigregister(EthernetConfiguration)
cvar = _kinova_raw.cvar
PAGE_SIZE = cvar.PAGE_SIZE
ADDRESS_PAGE_SIZE = cvar.ADDRESS_PAGE_SIZE
PACKET_PER_PAGE_QTY = cvar.PACKET_PER_PAGE_QTY
PAGEPACKET_SIZE = cvar.PAGEPACKET_SIZE
USB_HEADER_SIZE = cvar.USB_HEADER_SIZE
USB_DATA_SIZE = cvar.USB_DATA_SIZE

class SdkEthernetConfiguration(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    IPAddress = _swig_property(_kinova_raw.SdkEthernetConfiguration_IPAddress_get, _kinova_raw.SdkEthernetConfiguration_IPAddress_set)
    Subnet = _swig_property(_kinova_raw.SdkEthernetConfiguration_Subnet_get, _kinova_raw.SdkEthernetConfiguration_Subnet_set)
    CommandPortNumber = _swig_property(_kinova_raw.SdkEthernetConfiguration_CommandPortNumber_get, _kinova_raw.SdkEthernetConfiguration_CommandPortNumber_set)
    DiscoverPortNumber = _swig_property(_kinova_raw.SdkEthernetConfiguration_DiscoverPortNumber_get, _kinova_raw.SdkEthernetConfiguration_DiscoverPortNumber_set)
    RobotPortNumber = _swig_property(_kinova_raw.SdkEthernetConfiguration_RobotPortNumber_get, _kinova_raw.SdkEthernetConfiguration_RobotPortNumber_set)

    def __init__(self):
        this = _kinova_raw.new_SdkEthernetConfiguration()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_SdkEthernetConfiguration
    __del__ = lambda self: None
SdkEthernetConfiguration_swigregister = _kinova_raw.SdkEthernetConfiguration_swigregister
SdkEthernetConfiguration_swigregister(SdkEthernetConfiguration)

class AngularInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Actuator1 = _swig_property(_kinova_raw.AngularInfo_Actuator1_get, _kinova_raw.AngularInfo_Actuator1_set)
    Actuator2 = _swig_property(_kinova_raw.AngularInfo_Actuator2_get, _kinova_raw.AngularInfo_Actuator2_set)
    Actuator3 = _swig_property(_kinova_raw.AngularInfo_Actuator3_get, _kinova_raw.AngularInfo_Actuator3_set)
    Actuator4 = _swig_property(_kinova_raw.AngularInfo_Actuator4_get, _kinova_raw.AngularInfo_Actuator4_set)
    Actuator5 = _swig_property(_kinova_raw.AngularInfo_Actuator5_get, _kinova_raw.AngularInfo_Actuator5_set)
    Actuator6 = _swig_property(_kinova_raw.AngularInfo_Actuator6_get, _kinova_raw.AngularInfo_Actuator6_set)
    Actuator7 = _swig_property(_kinova_raw.AngularInfo_Actuator7_get, _kinova_raw.AngularInfo_Actuator7_set)

    def InitStruct(self):
        return _kinova_raw.AngularInfo_InitStruct(self)

    def __init__(self):
        this = _kinova_raw.new_AngularInfo()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_AngularInfo
    __del__ = lambda self: None
AngularInfo_swigregister = _kinova_raw.AngularInfo_swigregister
AngularInfo_swigregister(AngularInfo)

class CartesianInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    X = _swig_property(_kinova_raw.CartesianInfo_X_get, _kinova_raw.CartesianInfo_X_set)
    Y = _swig_property(_kinova_raw.CartesianInfo_Y_get, _kinova_raw.CartesianInfo_Y_set)
    Z = _swig_property(_kinova_raw.CartesianInfo_Z_get, _kinova_raw.CartesianInfo_Z_set)
    ThetaX = _swig_property(_kinova_raw.CartesianInfo_ThetaX_get, _kinova_raw.CartesianInfo_ThetaX_set)
    ThetaY = _swig_property(_kinova_raw.CartesianInfo_ThetaY_get, _kinova_raw.CartesianInfo_ThetaY_set)
    ThetaZ = _swig_property(_kinova_raw.CartesianInfo_ThetaZ_get, _kinova_raw.CartesianInfo_ThetaZ_set)

    def InitStruct(self):
        return _kinova_raw.CartesianInfo_InitStruct(self)

    def __init__(self):
        this = _kinova_raw.new_CartesianInfo()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_CartesianInfo
    __del__ = lambda self: None
CartesianInfo_swigregister = _kinova_raw.CartesianInfo_swigregister
CartesianInfo_swigregister(CartesianInfo)

class SensorsInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Voltage = _swig_property(_kinova_raw.SensorsInfo_Voltage_get, _kinova_raw.SensorsInfo_Voltage_set)
    Current = _swig_property(_kinova_raw.SensorsInfo_Current_get, _kinova_raw.SensorsInfo_Current_set)
    AccelerationX = _swig_property(_kinova_raw.SensorsInfo_AccelerationX_get, _kinova_raw.SensorsInfo_AccelerationX_set)
    AccelerationY = _swig_property(_kinova_raw.SensorsInfo_AccelerationY_get, _kinova_raw.SensorsInfo_AccelerationY_set)
    AccelerationZ = _swig_property(_kinova_raw.SensorsInfo_AccelerationZ_get, _kinova_raw.SensorsInfo_AccelerationZ_set)
    ActuatorTemp1 = _swig_property(_kinova_raw.SensorsInfo_ActuatorTemp1_get, _kinova_raw.SensorsInfo_ActuatorTemp1_set)
    ActuatorTemp2 = _swig_property(_kinova_raw.SensorsInfo_ActuatorTemp2_get, _kinova_raw.SensorsInfo_ActuatorTemp2_set)
    ActuatorTemp3 = _swig_property(_kinova_raw.SensorsInfo_ActuatorTemp3_get, _kinova_raw.SensorsInfo_ActuatorTemp3_set)
    ActuatorTemp4 = _swig_property(_kinova_raw.SensorsInfo_ActuatorTemp4_get, _kinova_raw.SensorsInfo_ActuatorTemp4_set)
    ActuatorTemp5 = _swig_property(_kinova_raw.SensorsInfo_ActuatorTemp5_get, _kinova_raw.SensorsInfo_ActuatorTemp5_set)
    ActuatorTemp6 = _swig_property(_kinova_raw.SensorsInfo_ActuatorTemp6_get, _kinova_raw.SensorsInfo_ActuatorTemp6_set)
    ActuatorTemp7 = _swig_property(_kinova_raw.SensorsInfo_ActuatorTemp7_get, _kinova_raw.SensorsInfo_ActuatorTemp7_set)
    FingerTemp1 = _swig_property(_kinova_raw.SensorsInfo_FingerTemp1_get, _kinova_raw.SensorsInfo_FingerTemp1_set)
    FingerTemp2 = _swig_property(_kinova_raw.SensorsInfo_FingerTemp2_get, _kinova_raw.SensorsInfo_FingerTemp2_set)
    FingerTemp3 = _swig_property(_kinova_raw.SensorsInfo_FingerTemp3_get, _kinova_raw.SensorsInfo_FingerTemp3_set)

    def InitStruct(self):
        return _kinova_raw.SensorsInfo_InitStruct(self)

    def __init__(self):
        this = _kinova_raw.new_SensorsInfo()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_SensorsInfo
    __del__ = lambda self: None
SensorsInfo_swigregister = _kinova_raw.SensorsInfo_swigregister
SensorsInfo_swigregister(SensorsInfo)

class FingersPosition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Finger1 = _swig_property(_kinova_raw.FingersPosition_Finger1_get, _kinova_raw.FingersPosition_Finger1_set)
    Finger2 = _swig_property(_kinova_raw.FingersPosition_Finger2_get, _kinova_raw.FingersPosition_Finger2_set)
    Finger3 = _swig_property(_kinova_raw.FingersPosition_Finger3_get, _kinova_raw.FingersPosition_Finger3_set)

    def InitStruct(self):
        return _kinova_raw.FingersPosition_InitStruct(self)

    def __init__(self):
        this = _kinova_raw.new_FingersPosition()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_FingersPosition
    __del__ = lambda self: None
FingersPosition_swigregister = _kinova_raw.FingersPosition_swigregister
FingersPosition_swigregister(FingersPosition)

class CartesianPosition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Coordinates = _swig_property(_kinova_raw.CartesianPosition_Coordinates_get, _kinova_raw.CartesianPosition_Coordinates_set)
    Fingers = _swig_property(_kinova_raw.CartesianPosition_Fingers_get, _kinova_raw.CartesianPosition_Fingers_set)

    def InitStruct(self):
        return _kinova_raw.CartesianPosition_InitStruct(self)

    def __init__(self):
        this = _kinova_raw.new_CartesianPosition()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_CartesianPosition
    __del__ = lambda self: None
CartesianPosition_swigregister = _kinova_raw.CartesianPosition_swigregister
CartesianPosition_swigregister(CartesianPosition)

class AngularPosition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Actuators = _swig_property(_kinova_raw.AngularPosition_Actuators_get, _kinova_raw.AngularPosition_Actuators_set)
    Fingers = _swig_property(_kinova_raw.AngularPosition_Fingers_get, _kinova_raw.AngularPosition_Fingers_set)

    def InitStruct(self):
        return _kinova_raw.AngularPosition_InitStruct(self)

    def __init__(self):
        this = _kinova_raw.new_AngularPosition()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_AngularPosition
    __del__ = lambda self: None
AngularPosition_swigregister = _kinova_raw.AngularPosition_swigregister
AngularPosition_swigregister(AngularPosition)

class Limitation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    speedParameter1 = _swig_property(_kinova_raw.Limitation_speedParameter1_get, _kinova_raw.Limitation_speedParameter1_set)
    speedParameter2 = _swig_property(_kinova_raw.Limitation_speedParameter2_get, _kinova_raw.Limitation_speedParameter2_set)
    speedParameter3 = _swig_property(_kinova_raw.Limitation_speedParameter3_get, _kinova_raw.Limitation_speedParameter3_set)
    forceParameter1 = _swig_property(_kinova_raw.Limitation_forceParameter1_get, _kinova_raw.Limitation_forceParameter1_set)
    forceParameter2 = _swig_property(_kinova_raw.Limitation_forceParameter2_get, _kinova_raw.Limitation_forceParameter2_set)
    forceParameter3 = _swig_property(_kinova_raw.Limitation_forceParameter3_get, _kinova_raw.Limitation_forceParameter3_set)
    accelerationParameter1 = _swig_property(_kinova_raw.Limitation_accelerationParameter1_get, _kinova_raw.Limitation_accelerationParameter1_set)
    accelerationParameter2 = _swig_property(_kinova_raw.Limitation_accelerationParameter2_get, _kinova_raw.Limitation_accelerationParameter2_set)
    accelerationParameter3 = _swig_property(_kinova_raw.Limitation_accelerationParameter3_get, _kinova_raw.Limitation_accelerationParameter3_set)

    def InitStruct(self):
        return _kinova_raw.Limitation_InitStruct(self)

    def __init__(self):
        this = _kinova_raw.new_Limitation()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_Limitation
    __del__ = lambda self: None
Limitation_swigregister = _kinova_raw.Limitation_swigregister
Limitation_swigregister(Limitation)

class UserPosition(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Type = _swig_property(_kinova_raw.UserPosition_Type_get, _kinova_raw.UserPosition_Type_set)
    Delay = _swig_property(_kinova_raw.UserPosition_Delay_get, _kinova_raw.UserPosition_Delay_set)
    CartesianPosition = _swig_property(_kinova_raw.UserPosition_CartesianPosition_get, _kinova_raw.UserPosition_CartesianPosition_set)
    Actuators = _swig_property(_kinova_raw.UserPosition_Actuators_get, _kinova_raw.UserPosition_Actuators_set)
    HandMode = _swig_property(_kinova_raw.UserPosition_HandMode_get, _kinova_raw.UserPosition_HandMode_set)
    Fingers = _swig_property(_kinova_raw.UserPosition_Fingers_get, _kinova_raw.UserPosition_Fingers_set)

    def InitStruct(self):
        return _kinova_raw.UserPosition_InitStruct(self)

    def __init__(self):
        this = _kinova_raw.new_UserPosition()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_UserPosition
    __del__ = lambda self: None
UserPosition_swigregister = _kinova_raw.UserPosition_swigregister
UserPosition_swigregister(UserPosition)

class TrajectoryPoint(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Position = _swig_property(_kinova_raw.TrajectoryPoint_Position_get, _kinova_raw.TrajectoryPoint_Position_set)
    LimitationsActive = _swig_property(_kinova_raw.TrajectoryPoint_LimitationsActive_get, _kinova_raw.TrajectoryPoint_LimitationsActive_set)
    SynchroType = _swig_property(_kinova_raw.TrajectoryPoint_SynchroType_get, _kinova_raw.TrajectoryPoint_SynchroType_set)
    Limitations = _swig_property(_kinova_raw.TrajectoryPoint_Limitations_get, _kinova_raw.TrajectoryPoint_Limitations_set)

    def InitStruct(self):
        return _kinova_raw.TrajectoryPoint_InitStruct(self)

    def __init__(self):
        this = _kinova_raw.new_TrajectoryPoint()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_TrajectoryPoint
    __del__ = lambda self: None
TrajectoryPoint_swigregister = _kinova_raw.TrajectoryPoint_swigregister
TrajectoryPoint_swigregister(TrajectoryPoint)

class TrajectoryFIFO(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    TrajectoryCount = _swig_property(_kinova_raw.TrajectoryFIFO_TrajectoryCount_get, _kinova_raw.TrajectoryFIFO_TrajectoryCount_set)
    UsedPercentage = _swig_property(_kinova_raw.TrajectoryFIFO_UsedPercentage_get, _kinova_raw.TrajectoryFIFO_UsedPercentage_set)
    MaxSize = _swig_property(_kinova_raw.TrajectoryFIFO_MaxSize_get, _kinova_raw.TrajectoryFIFO_MaxSize_set)

    def __init__(self):
        this = _kinova_raw.new_TrajectoryFIFO()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_TrajectoryFIFO
    __del__ = lambda self: None
TrajectoryFIFO_swigregister = _kinova_raw.TrajectoryFIFO_swigregister
TrajectoryFIFO_swigregister(TrajectoryFIFO)

class SingularityVector(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    TranslationSingularityCount = _swig_property(_kinova_raw.SingularityVector_TranslationSingularityCount_get, _kinova_raw.SingularityVector_TranslationSingularityCount_set)
    OrientationSingularityCount = _swig_property(_kinova_raw.SingularityVector_OrientationSingularityCount_get, _kinova_raw.SingularityVector_OrientationSingularityCount_set)
    TranslationSingularityDistance = _swig_property(_kinova_raw.SingularityVector_TranslationSingularityDistance_get, _kinova_raw.SingularityVector_TranslationSingularityDistance_set)
    OrientationSingularityDistance = _swig_property(_kinova_raw.SingularityVector_OrientationSingularityDistance_get, _kinova_raw.SingularityVector_OrientationSingularityDistance_set)
    RepulsionVector = _swig_property(_kinova_raw.SingularityVector_RepulsionVector_get, _kinova_raw.SingularityVector_RepulsionVector_set)

    def __init__(self):
        this = _kinova_raw.new_SingularityVector()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_SingularityVector
    __del__ = lambda self: None
SingularityVector_swigregister = _kinova_raw.SingularityVector_swigregister
SingularityVector_swigregister(SingularityVector)

class JoystickCommand(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    ButtonValue = _swig_property(_kinova_raw.JoystickCommand_ButtonValue_get, _kinova_raw.JoystickCommand_ButtonValue_set)
    InclineLeftRight = _swig_property(_kinova_raw.JoystickCommand_InclineLeftRight_get, _kinova_raw.JoystickCommand_InclineLeftRight_set)
    InclineForwardBackward = _swig_property(_kinova_raw.JoystickCommand_InclineForwardBackward_get, _kinova_raw.JoystickCommand_InclineForwardBackward_set)
    Rotate = _swig_property(_kinova_raw.JoystickCommand_Rotate_get, _kinova_raw.JoystickCommand_Rotate_set)
    MoveLeftRight = _swig_property(_kinova_raw.JoystickCommand_MoveLeftRight_get, _kinova_raw.JoystickCommand_MoveLeftRight_set)
    MoveForwardBackward = _swig_property(_kinova_raw.JoystickCommand_MoveForwardBackward_get, _kinova_raw.JoystickCommand_MoveForwardBackward_set)
    PushPull = _swig_property(_kinova_raw.JoystickCommand_PushPull_get, _kinova_raw.JoystickCommand_PushPull_set)

    def InitStruct(self):
        return _kinova_raw.JoystickCommand_InitStruct(self)

    def __init__(self):
        this = _kinova_raw.new_JoystickCommand()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_JoystickCommand
    __del__ = lambda self: None
JoystickCommand_swigregister = _kinova_raw.JoystickCommand_swigregister
JoystickCommand_swigregister(JoystickCommand)

class RobotIdentity(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    SerialNumber = _swig_property(_kinova_raw.RobotIdentity_SerialNumber_get, _kinova_raw.RobotIdentity_SerialNumber_set)
    Model = _swig_property(_kinova_raw.RobotIdentity_Model_get, _kinova_raw.RobotIdentity_Model_set)
    CodeVersion = _swig_property(_kinova_raw.RobotIdentity_CodeVersion_get, _kinova_raw.RobotIdentity_CodeVersion_set)
    RobotType = _swig_property(_kinova_raw.RobotIdentity_RobotType_get, _kinova_raw.RobotIdentity_RobotType_set)

    def __init__(self):
        this = _kinova_raw.new_RobotIdentity()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_RobotIdentity
    __del__ = lambda self: None
RobotIdentity_swigregister = _kinova_raw.RobotIdentity_swigregister
RobotIdentity_swigregister(RobotIdentity)

class ClientConfigurations(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    ClientID = _swig_property(_kinova_raw.ClientConfigurations_ClientID_get, _kinova_raw.ClientConfigurations_ClientID_set)
    ClientName = _swig_property(_kinova_raw.ClientConfigurations_ClientName_get, _kinova_raw.ClientConfigurations_ClientName_set)
    Organization = _swig_property(_kinova_raw.ClientConfigurations_Organization_get, _kinova_raw.ClientConfigurations_Organization_set)
    Serial = _swig_property(_kinova_raw.ClientConfigurations_Serial_get, _kinova_raw.ClientConfigurations_Serial_set)
    Model = _swig_property(_kinova_raw.ClientConfigurations_Model_get, _kinova_raw.ClientConfigurations_Model_set)
    Laterality = _swig_property(_kinova_raw.ClientConfigurations_Laterality_get, _kinova_raw.ClientConfigurations_Laterality_set)
    MaxTranslationVelocity = _swig_property(_kinova_raw.ClientConfigurations_MaxTranslationVelocity_get, _kinova_raw.ClientConfigurations_MaxTranslationVelocity_set)
    MaxOrientationVelocity = _swig_property(_kinova_raw.ClientConfigurations_MaxOrientationVelocity_get, _kinova_raw.ClientConfigurations_MaxOrientationVelocity_set)
    MaxTranslationAcceleration = _swig_property(_kinova_raw.ClientConfigurations_MaxTranslationAcceleration_get, _kinova_raw.ClientConfigurations_MaxTranslationAcceleration_set)
    MaxOrientationAcceleration = _swig_property(_kinova_raw.ClientConfigurations_MaxOrientationAcceleration_get, _kinova_raw.ClientConfigurations_MaxOrientationAcceleration_set)
    MaxForce = _swig_property(_kinova_raw.ClientConfigurations_MaxForce_get, _kinova_raw.ClientConfigurations_MaxForce_set)
    Sensibility = _swig_property(_kinova_raw.ClientConfigurations_Sensibility_get, _kinova_raw.ClientConfigurations_Sensibility_set)
    DrinkingHeight = _swig_property(_kinova_raw.ClientConfigurations_DrinkingHeight_get, _kinova_raw.ClientConfigurations_DrinkingHeight_set)
    ComplexRetractActive = _swig_property(_kinova_raw.ClientConfigurations_ComplexRetractActive_get, _kinova_raw.ClientConfigurations_ComplexRetractActive_set)
    RetractedPositionAngle = _swig_property(_kinova_raw.ClientConfigurations_RetractedPositionAngle_get, _kinova_raw.ClientConfigurations_RetractedPositionAngle_set)
    RetractedPositionCount = _swig_property(_kinova_raw.ClientConfigurations_RetractedPositionCount_get, _kinova_raw.ClientConfigurations_RetractedPositionCount_set)
    RetractPositions = _swig_property(_kinova_raw.ClientConfigurations_RetractPositions_get, _kinova_raw.ClientConfigurations_RetractPositions_set)
    DrinkingDistance = _swig_property(_kinova_raw.ClientConfigurations_DrinkingDistance_get, _kinova_raw.ClientConfigurations_DrinkingDistance_set)
    Fingers2and3Inverted = _swig_property(_kinova_raw.ClientConfigurations_Fingers2and3Inverted_get, _kinova_raw.ClientConfigurations_Fingers2and3Inverted_set)
    DrinkingLenght = _swig_property(_kinova_raw.ClientConfigurations_DrinkingLenght_get, _kinova_raw.ClientConfigurations_DrinkingLenght_set)
    DeletePreProgrammedPositionsAtRetract = _swig_property(_kinova_raw.ClientConfigurations_DeletePreProgrammedPositionsAtRetract_get, _kinova_raw.ClientConfigurations_DeletePreProgrammedPositionsAtRetract_set)
    EnableFlashErrorLog = _swig_property(_kinova_raw.ClientConfigurations_EnableFlashErrorLog_get, _kinova_raw.ClientConfigurations_EnableFlashErrorLog_set)
    EnableFlashPositionLog = _swig_property(_kinova_raw.ClientConfigurations_EnableFlashPositionLog_get, _kinova_raw.ClientConfigurations_EnableFlashPositionLog_set)
    RobotConfigSelect = _swig_property(_kinova_raw.ClientConfigurations_RobotConfigSelect_get, _kinova_raw.ClientConfigurations_RobotConfigSelect_set)
    TorqueSensorsEnable = _swig_property(_kinova_raw.ClientConfigurations_TorqueSensorsEnable_get, _kinova_raw.ClientConfigurations_TorqueSensorsEnable_set)
    FrameType = _swig_property(_kinova_raw.ClientConfigurations_FrameType_get, _kinova_raw.ClientConfigurations_FrameType_set)
    Expansion = _swig_property(_kinova_raw.ClientConfigurations_Expansion_get, _kinova_raw.ClientConfigurations_Expansion_set)

    def __init__(self):
        this = _kinova_raw.new_ClientConfigurations()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_ClientConfigurations
    __del__ = lambda self: None
ClientConfigurations_swigregister = _kinova_raw.ClientConfigurations_swigregister
ClientConfigurations_swigregister(ClientConfigurations)


_kinova_raw.CF_NoFunctionality_swigconstant(_kinova_raw)
CF_NoFunctionality = _kinova_raw.CF_NoFunctionality

_kinova_raw.CF_Disable_EnableJoystick_swigconstant(_kinova_raw)
CF_Disable_EnableJoystick = _kinova_raw.CF_Disable_EnableJoystick

_kinova_raw.CF_Retract_ReadyToUse_swigconstant(_kinova_raw)
CF_Retract_ReadyToUse = _kinova_raw.CF_Retract_ReadyToUse

_kinova_raw.CF_Change_TwoAxis_ThreeAxis_swigconstant(_kinova_raw)
CF_Change_TwoAxis_ThreeAxis = _kinova_raw.CF_Change_TwoAxis_ThreeAxis

_kinova_raw.CF_Change_DrinkingMode_swigconstant(_kinova_raw)
CF_Change_DrinkingMode = _kinova_raw.CF_Change_DrinkingMode

_kinova_raw.CF_Cycle_ModeA_list_swigconstant(_kinova_raw)
CF_Cycle_ModeA_list = _kinova_raw.CF_Cycle_ModeA_list

_kinova_raw.CF_Cycle_ModeB_list_swigconstant(_kinova_raw)
CF_Cycle_ModeB_list = _kinova_raw.CF_Cycle_ModeB_list

_kinova_raw.CF_DecreaseSpeed_swigconstant(_kinova_raw)
CF_DecreaseSpeed = _kinova_raw.CF_DecreaseSpeed

_kinova_raw.CF_IncreaseSpeed_swigconstant(_kinova_raw)
CF_IncreaseSpeed = _kinova_raw.CF_IncreaseSpeed

_kinova_raw.CF_Goto_Position1_swigconstant(_kinova_raw)
CF_Goto_Position1 = _kinova_raw.CF_Goto_Position1

_kinova_raw.CF_Goto_Position2_swigconstant(_kinova_raw)
CF_Goto_Position2 = _kinova_raw.CF_Goto_Position2

_kinova_raw.CF_Goto_Position3_swigconstant(_kinova_raw)
CF_Goto_Position3 = _kinova_raw.CF_Goto_Position3

_kinova_raw.CF_Goto_Position4_swigconstant(_kinova_raw)
CF_Goto_Position4 = _kinova_raw.CF_Goto_Position4

_kinova_raw.CF_Goto_Position5_swigconstant(_kinova_raw)
CF_Goto_Position5 = _kinova_raw.CF_Goto_Position5

_kinova_raw.CF_RecordPosition1_swigconstant(_kinova_raw)
CF_RecordPosition1 = _kinova_raw.CF_RecordPosition1

_kinova_raw.CF_RecordPosition2_swigconstant(_kinova_raw)
CF_RecordPosition2 = _kinova_raw.CF_RecordPosition2

_kinova_raw.CF_RecordPosition3_swigconstant(_kinova_raw)
CF_RecordPosition3 = _kinova_raw.CF_RecordPosition3

_kinova_raw.CF_RecordPosition4_swigconstant(_kinova_raw)
CF_RecordPosition4 = _kinova_raw.CF_RecordPosition4

_kinova_raw.CF_RecordPosition5_swigconstant(_kinova_raw)
CF_RecordPosition5 = _kinova_raw.CF_RecordPosition5

_kinova_raw.CF_X_Positive_swigconstant(_kinova_raw)
CF_X_Positive = _kinova_raw.CF_X_Positive

_kinova_raw.CF_X_Negative_swigconstant(_kinova_raw)
CF_X_Negative = _kinova_raw.CF_X_Negative

_kinova_raw.CF_Y_Positive_swigconstant(_kinova_raw)
CF_Y_Positive = _kinova_raw.CF_Y_Positive

_kinova_raw.CF_Y_Negative_swigconstant(_kinova_raw)
CF_Y_Negative = _kinova_raw.CF_Y_Negative

_kinova_raw.CF_Z_Positive_swigconstant(_kinova_raw)
CF_Z_Positive = _kinova_raw.CF_Z_Positive

_kinova_raw.CF_Z_Negative_swigconstant(_kinova_raw)
CF_Z_Negative = _kinova_raw.CF_Z_Negative

_kinova_raw.CF_R_Positive_swigconstant(_kinova_raw)
CF_R_Positive = _kinova_raw.CF_R_Positive

_kinova_raw.CF_R_Negative_swigconstant(_kinova_raw)
CF_R_Negative = _kinova_raw.CF_R_Negative

_kinova_raw.CF_U_Positive_swigconstant(_kinova_raw)
CF_U_Positive = _kinova_raw.CF_U_Positive

_kinova_raw.CF_U_Negative_swigconstant(_kinova_raw)
CF_U_Negative = _kinova_raw.CF_U_Negative

_kinova_raw.CF_V_Positive_swigconstant(_kinova_raw)
CF_V_Positive = _kinova_raw.CF_V_Positive

_kinova_raw.CF_V_Negative_swigconstant(_kinova_raw)
CF_V_Negative = _kinova_raw.CF_V_Negative

_kinova_raw.CF_OpenHandOneFingers_swigconstant(_kinova_raw)
CF_OpenHandOneFingers = _kinova_raw.CF_OpenHandOneFingers

_kinova_raw.CF_CloseHandOneFingers_swigconstant(_kinova_raw)
CF_CloseHandOneFingers = _kinova_raw.CF_CloseHandOneFingers

_kinova_raw.CF_OpenHandTwoFingers_swigconstant(_kinova_raw)
CF_OpenHandTwoFingers = _kinova_raw.CF_OpenHandTwoFingers

_kinova_raw.CF_CloseHandTwoFingers_swigconstant(_kinova_raw)
CF_CloseHandTwoFingers = _kinova_raw.CF_CloseHandTwoFingers

_kinova_raw.CF_OpenHandThreeFingers_swigconstant(_kinova_raw)
CF_OpenHandThreeFingers = _kinova_raw.CF_OpenHandThreeFingers

_kinova_raw.CF_CloseHandThreeFingers_swigconstant(_kinova_raw)
CF_CloseHandThreeFingers = _kinova_raw.CF_CloseHandThreeFingers

_kinova_raw.CF_ForceAngularVelocity_swigconstant(_kinova_raw)
CF_ForceAngularVelocity = _kinova_raw.CF_ForceAngularVelocity

_kinova_raw.CF_ForceControlStatus_swigconstant(_kinova_raw)
CF_ForceControlStatus = _kinova_raw.CF_ForceControlStatus

_kinova_raw.CF_Trajectory_swigconstant(_kinova_raw)
CF_Trajectory = _kinova_raw.CF_Trajectory

_kinova_raw.CF_AutomaticOrientationXPlus_swigconstant(_kinova_raw)
CF_AutomaticOrientationXPlus = _kinova_raw.CF_AutomaticOrientationXPlus

_kinova_raw.CF_AutomaticOrientationXMinus_swigconstant(_kinova_raw)
CF_AutomaticOrientationXMinus = _kinova_raw.CF_AutomaticOrientationXMinus

_kinova_raw.CF_AutomaticOrientationYPlus_swigconstant(_kinova_raw)
CF_AutomaticOrientationYPlus = _kinova_raw.CF_AutomaticOrientationYPlus

_kinova_raw.CF_AutomaticOrientationYMinus_swigconstant(_kinova_raw)
CF_AutomaticOrientationYMinus = _kinova_raw.CF_AutomaticOrientationYMinus

_kinova_raw.CF_AutomaticOrientationZPlus_swigconstant(_kinova_raw)
CF_AutomaticOrientationZPlus = _kinova_raw.CF_AutomaticOrientationZPlus

_kinova_raw.CF_AutomaticOrientationZMinus_swigconstant(_kinova_raw)
CF_AutomaticOrientationZMinus = _kinova_raw.CF_AutomaticOrientationZMinus

_kinova_raw.CF_AdvanceGOTO_1_swigconstant(_kinova_raw)
CF_AdvanceGOTO_1 = _kinova_raw.CF_AdvanceGOTO_1

_kinova_raw.CF_AdvanceGOTO_Clear_1_swigconstant(_kinova_raw)
CF_AdvanceGOTO_Clear_1 = _kinova_raw.CF_AdvanceGOTO_Clear_1

_kinova_raw.CF_AdvanceGOTO_Add_1_swigconstant(_kinova_raw)
CF_AdvanceGOTO_Add_1 = _kinova_raw.CF_AdvanceGOTO_Add_1

_kinova_raw.CF_AdvanceGOTO_2_swigconstant(_kinova_raw)
CF_AdvanceGOTO_2 = _kinova_raw.CF_AdvanceGOTO_2

_kinova_raw.CF_AdvanceGOTO_3_swigconstant(_kinova_raw)
CF_AdvanceGOTO_3 = _kinova_raw.CF_AdvanceGOTO_3

_kinova_raw.CF_AdvanceGOTO_4_swigconstant(_kinova_raw)
CF_AdvanceGOTO_4 = _kinova_raw.CF_AdvanceGOTO_4

_kinova_raw.CF_AdvanceGOTO_5_swigconstant(_kinova_raw)
CF_AdvanceGOTO_5 = _kinova_raw.CF_AdvanceGOTO_5

_kinova_raw.CF_AdvanceGOTO_Clear_2_swigconstant(_kinova_raw)
CF_AdvanceGOTO_Clear_2 = _kinova_raw.CF_AdvanceGOTO_Clear_2

_kinova_raw.CF_AdvanceGOTO_Clear_3_swigconstant(_kinova_raw)
CF_AdvanceGOTO_Clear_3 = _kinova_raw.CF_AdvanceGOTO_Clear_3

_kinova_raw.CF_AdvanceGOTO_Clear_4_swigconstant(_kinova_raw)
CF_AdvanceGOTO_Clear_4 = _kinova_raw.CF_AdvanceGOTO_Clear_4

_kinova_raw.CF_AdvanceGOTO_Clear_5_swigconstant(_kinova_raw)
CF_AdvanceGOTO_Clear_5 = _kinova_raw.CF_AdvanceGOTO_Clear_5

_kinova_raw.CF_AdvanceGOTO_add_2_swigconstant(_kinova_raw)
CF_AdvanceGOTO_add_2 = _kinova_raw.CF_AdvanceGOTO_add_2

_kinova_raw.CF_AdvanceGOTO_add_3_swigconstant(_kinova_raw)
CF_AdvanceGOTO_add_3 = _kinova_raw.CF_AdvanceGOTO_add_3

_kinova_raw.CF_AdvanceGOTO_add_4_swigconstant(_kinova_raw)
CF_AdvanceGOTO_add_4 = _kinova_raw.CF_AdvanceGOTO_add_4

_kinova_raw.CF_AdvanceGOTO_add_5_swigconstant(_kinova_raw)
CF_AdvanceGOTO_add_5 = _kinova_raw.CF_AdvanceGOTO_add_5

_kinova_raw.CF_IncreaseSpasmLevel_swigconstant(_kinova_raw)
CF_IncreaseSpasmLevel = _kinova_raw.CF_IncreaseSpasmLevel

_kinova_raw.CF_DecreaseSpasmLevel_swigconstant(_kinova_raw)
CF_DecreaseSpasmLevel = _kinova_raw.CF_DecreaseSpasmLevel

_kinova_raw.CF_CycleDown_ModeA_list_swigconstant(_kinova_raw)
CF_CycleDown_ModeA_list = _kinova_raw.CF_CycleDown_ModeA_list

_kinova_raw.CF_CycleDown_ModeB_list_swigconstant(_kinova_raw)
CF_CycleDown_ModeB_list = _kinova_raw.CF_CycleDown_ModeB_list

_kinova_raw.CF_Theta7_Positive_swigconstant(_kinova_raw)
CF_Theta7_Positive = _kinova_raw.CF_Theta7_Positive

_kinova_raw.CF_Theta7_Negative_swigconstant(_kinova_raw)
CF_Theta7_Negative = _kinova_raw.CF_Theta7_Negative
class StickEvents(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Minus = _swig_property(_kinova_raw.StickEvents_Minus_get, _kinova_raw.StickEvents_Minus_set)
    Plus = _swig_property(_kinova_raw.StickEvents_Plus_get, _kinova_raw.StickEvents_Plus_set)

    def __init__(self):
        this = _kinova_raw.new_StickEvents()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_StickEvents
    __del__ = lambda self: None
StickEvents_swigregister = _kinova_raw.StickEvents_swigregister
StickEvents_swigregister(StickEvents)

class ButtonEvents(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    OneClick = _swig_property(_kinova_raw.ButtonEvents_OneClick_get, _kinova_raw.ButtonEvents_OneClick_set)
    TwoClick = _swig_property(_kinova_raw.ButtonEvents_TwoClick_get, _kinova_raw.ButtonEvents_TwoClick_set)
    HoldOneSec = _swig_property(_kinova_raw.ButtonEvents_HoldOneSec_get, _kinova_raw.ButtonEvents_HoldOneSec_set)
    HoldTwoSec = _swig_property(_kinova_raw.ButtonEvents_HoldTwoSec_get, _kinova_raw.ButtonEvents_HoldTwoSec_set)
    HoldThreeSec = _swig_property(_kinova_raw.ButtonEvents_HoldThreeSec_get, _kinova_raw.ButtonEvents_HoldThreeSec_set)
    HoldFourSec = _swig_property(_kinova_raw.ButtonEvents_HoldFourSec_get, _kinova_raw.ButtonEvents_HoldFourSec_set)
    HoldDown = _swig_property(_kinova_raw.ButtonEvents_HoldDown_get, _kinova_raw.ButtonEvents_HoldDown_set)

    def __init__(self):
        this = _kinova_raw.new_ButtonEvents()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_ButtonEvents
    __del__ = lambda self: None
ButtonEvents_swigregister = _kinova_raw.ButtonEvents_swigregister
ButtonEvents_swigregister(ButtonEvents)


_kinova_raw.OneAxis_swigconstant(_kinova_raw)
OneAxis = _kinova_raw.OneAxis

_kinova_raw.TwoAxis_swigconstant(_kinova_raw)
TwoAxis = _kinova_raw.TwoAxis

_kinova_raw.ThreeAxis_swigconstant(_kinova_raw)
ThreeAxis = _kinova_raw.ThreeAxis

_kinova_raw.SixAxis_swigconstant(_kinova_raw)
SixAxis = _kinova_raw.SixAxis
class ControlsModeMap(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    DiagonalsLocked = _swig_property(_kinova_raw.ControlsModeMap_DiagonalsLocked_get, _kinova_raw.ControlsModeMap_DiagonalsLocked_set)
    Expansion = _swig_property(_kinova_raw.ControlsModeMap_Expansion_get, _kinova_raw.ControlsModeMap_Expansion_set)
    ControlSticks = _swig_property(_kinova_raw.ControlsModeMap_ControlSticks_get, _kinova_raw.ControlsModeMap_ControlSticks_set)
    ControlButtons = _swig_property(_kinova_raw.ControlsModeMap_ControlButtons_get, _kinova_raw.ControlsModeMap_ControlButtons_set)

    def __init__(self):
        this = _kinova_raw.new_ControlsModeMap()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_ControlsModeMap
    __del__ = lambda self: None
ControlsModeMap_swigregister = _kinova_raw.ControlsModeMap_swigregister
ControlsModeMap_swigregister(ControlsModeMap)

class ControlMapping(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    NumOfModesA = _swig_property(_kinova_raw.ControlMapping_NumOfModesA_get, _kinova_raw.ControlMapping_NumOfModesA_set)
    NumOfModesB = _swig_property(_kinova_raw.ControlMapping_NumOfModesB_get, _kinova_raw.ControlMapping_NumOfModesB_set)
    ActualModeA = _swig_property(_kinova_raw.ControlMapping_ActualModeA_get, _kinova_raw.ControlMapping_ActualModeA_set)
    ActualModeB = _swig_property(_kinova_raw.ControlMapping_ActualModeB_get, _kinova_raw.ControlMapping_ActualModeB_set)
    Mode = _swig_property(_kinova_raw.ControlMapping_Mode_get, _kinova_raw.ControlMapping_Mode_set)
    ModeControlsA = _swig_property(_kinova_raw.ControlMapping_ModeControlsA_get, _kinova_raw.ControlMapping_ModeControlsA_set)
    ModeControlsB = _swig_property(_kinova_raw.ControlMapping_ModeControlsB_get, _kinova_raw.ControlMapping_ModeControlsB_set)

    def __init__(self):
        this = _kinova_raw.new_ControlMapping()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_ControlMapping
    __del__ = lambda self: None
ControlMapping_swigregister = _kinova_raw.ControlMapping_swigregister
ControlMapping_swigregister(ControlMapping)

class ControlMappingCharts(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    NumOfConfiguredMapping = _swig_property(_kinova_raw.ControlMappingCharts_NumOfConfiguredMapping_get, _kinova_raw.ControlMappingCharts_NumOfConfiguredMapping_set)
    ActualControlMapping = _swig_property(_kinova_raw.ControlMappingCharts_ActualControlMapping_get, _kinova_raw.ControlMappingCharts_ActualControlMapping_set)
    Mapping = _swig_property(_kinova_raw.ControlMappingCharts_Mapping_get, _kinova_raw.ControlMappingCharts_Mapping_set)

    def __init__(self):
        this = _kinova_raw.new_ControlMappingCharts()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_ControlMappingCharts
    __del__ = lambda self: None
ControlMappingCharts_swigregister = _kinova_raw.ControlMappingCharts_swigregister
ControlMappingCharts_swigregister(ControlMappingCharts)


_kinova_raw.ERROR_NOTINITIALIZED_swigconstant(_kinova_raw)
ERROR_NOTINITIALIZED = _kinova_raw.ERROR_NOTINITIALIZED

_kinova_raw.keos_err1_swigconstant(_kinova_raw)
keos_err1 = _kinova_raw.keos_err1

_kinova_raw.keos_err2_swigconstant(_kinova_raw)
keos_err2 = _kinova_raw.keos_err2

_kinova_raw.keos_err3_swigconstant(_kinova_raw)
keos_err3 = _kinova_raw.keos_err3

_kinova_raw.User_err_start_marker_swigconstant(_kinova_raw)
User_err_start_marker = _kinova_raw.User_err_start_marker

_kinova_raw.errorlog_Actuator_Temperature_swigconstant(_kinova_raw)
errorlog_Actuator_Temperature = _kinova_raw.errorlog_Actuator_Temperature

_kinova_raw.errorlog_Actuator_TemperatureOK_swigconstant(_kinova_raw)
errorlog_Actuator_TemperatureOK = _kinova_raw.errorlog_Actuator_TemperatureOK

_kinova_raw.errorlog_Finger_Temperature_swigconstant(_kinova_raw)
errorlog_Finger_Temperature = _kinova_raw.errorlog_Finger_Temperature

_kinova_raw.errorlog_Finger_TemperatureOK_swigconstant(_kinova_raw)
errorlog_Finger_TemperatureOK = _kinova_raw.errorlog_Finger_TemperatureOK

_kinova_raw.errorlog_voltage_swigconstant(_kinova_raw)
errorlog_voltage = _kinova_raw.errorlog_voltage

_kinova_raw.errorlog_voltageOK_swigconstant(_kinova_raw)
errorlog_voltageOK = _kinova_raw.errorlog_voltageOK

_kinova_raw.errorlog_current_FingersClosing_swigconstant(_kinova_raw)
errorlog_current_FingersClosing = _kinova_raw.errorlog_current_FingersClosing

_kinova_raw.errorlog_current_FingersOpening_swigconstant(_kinova_raw)
errorlog_current_FingersOpening = _kinova_raw.errorlog_current_FingersOpening

_kinova_raw.errorlog_current_FingersOK_swigconstant(_kinova_raw)
errorlog_current_FingersOK = _kinova_raw.errorlog_current_FingersOK

_kinova_raw.errorlog_current_Actuators_swigconstant(_kinova_raw)
errorlog_current_Actuators = _kinova_raw.errorlog_current_Actuators

_kinova_raw.errorlog_current_ActuatorsOK_swigconstant(_kinova_raw)
errorlog_current_ActuatorsOK = _kinova_raw.errorlog_current_ActuatorsOK

_kinova_raw.errorLog_RobotStatus_Build_Incomplete_swigconstant(_kinova_raw)
errorLog_RobotStatus_Build_Incomplete = _kinova_raw.errorLog_RobotStatus_Build_Incomplete

_kinova_raw.errorLogger_END_swigconstant(_kinova_raw)
errorLogger_END = _kinova_raw.errorLogger_END
class SystemError(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    ErrorHeader = _swig_property(_kinova_raw.SystemError_ErrorHeader_get, _kinova_raw.SystemError_ErrorHeader_set)
    ErrorType = _swig_property(_kinova_raw.SystemError_ErrorType_get, _kinova_raw.SystemError_ErrorType_set)
    FirmwareVersion = _swig_property(_kinova_raw.SystemError_FirmwareVersion_get, _kinova_raw.SystemError_FirmwareVersion_set)
    KeosVersion = _swig_property(_kinova_raw.SystemError_KeosVersion_get, _kinova_raw.SystemError_KeosVersion_set)
    SystemTime = _swig_property(_kinova_raw.SystemError_SystemTime_get, _kinova_raw.SystemError_SystemTime_set)
    LayerErrorStatus = _swig_property(_kinova_raw.SystemError_LayerErrorStatus_get, _kinova_raw.SystemError_LayerErrorStatus_set)
    LifeTime = _swig_property(_kinova_raw.SystemError_LifeTime_get, _kinova_raw.SystemError_LifeTime_set)
    DataCount = _swig_property(_kinova_raw.SystemError_DataCount_get, _kinova_raw.SystemError_DataCount_set)
    Data = _swig_property(_kinova_raw.SystemError_Data_get, _kinova_raw.SystemError_Data_set)

    def __init__(self):
        this = _kinova_raw.new_SystemError()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_SystemError
    __del__ = lambda self: None
SystemError_swigregister = _kinova_raw.SystemError_swigregister
SystemError_swigregister(SystemError)

class ZoneLimitation(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    speedParameter1 = _swig_property(_kinova_raw.ZoneLimitation_speedParameter1_get, _kinova_raw.ZoneLimitation_speedParameter1_set)
    speedParameter2 = _swig_property(_kinova_raw.ZoneLimitation_speedParameter2_get, _kinova_raw.ZoneLimitation_speedParameter2_set)
    speedParameter3 = _swig_property(_kinova_raw.ZoneLimitation_speedParameter3_get, _kinova_raw.ZoneLimitation_speedParameter3_set)
    forceParameter1 = _swig_property(_kinova_raw.ZoneLimitation_forceParameter1_get, _kinova_raw.ZoneLimitation_forceParameter1_set)
    forceParameter2 = _swig_property(_kinova_raw.ZoneLimitation_forceParameter2_get, _kinova_raw.ZoneLimitation_forceParameter2_set)
    forceParameter3 = _swig_property(_kinova_raw.ZoneLimitation_forceParameter3_get, _kinova_raw.ZoneLimitation_forceParameter3_set)
    accelerationParameter1 = _swig_property(_kinova_raw.ZoneLimitation_accelerationParameter1_get, _kinova_raw.ZoneLimitation_accelerationParameter1_set)
    accelerationParameter2 = _swig_property(_kinova_raw.ZoneLimitation_accelerationParameter2_get, _kinova_raw.ZoneLimitation_accelerationParameter2_set)
    accelerationParameter3 = _swig_property(_kinova_raw.ZoneLimitation_accelerationParameter3_get, _kinova_raw.ZoneLimitation_accelerationParameter3_set)

    def __init__(self):
        this = _kinova_raw.new_ZoneLimitation()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_ZoneLimitation
    __del__ = lambda self: None
ZoneLimitation_swigregister = _kinova_raw.ZoneLimitation_swigregister
ZoneLimitation_swigregister(ZoneLimitation)


_kinova_raw.PrismSquareBase_X_swigconstant(_kinova_raw)
PrismSquareBase_X = _kinova_raw.PrismSquareBase_X

_kinova_raw.PrismSquareBase_Y_swigconstant(_kinova_raw)
PrismSquareBase_Y = _kinova_raw.PrismSquareBase_Y

_kinova_raw.PrismSquareBase_Z_swigconstant(_kinova_raw)
PrismSquareBase_Z = _kinova_raw.PrismSquareBase_Z

_kinova_raw.PrismTriangularBase_X_swigconstant(_kinova_raw)
PrismTriangularBase_X = _kinova_raw.PrismTriangularBase_X

_kinova_raw.PrismTriangularBase_Y_swigconstant(_kinova_raw)
PrismTriangularBase_Y = _kinova_raw.PrismTriangularBase_Y

_kinova_raw.PrismTriangularBase_Z_swigconstant(_kinova_raw)
PrismTriangularBase_Z = _kinova_raw.PrismTriangularBase_Z

_kinova_raw.Pyramid_swigconstant(_kinova_raw)
Pyramid = _kinova_raw.Pyramid
class ForcesInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Actuator1 = _swig_property(_kinova_raw.ForcesInfo_Actuator1_get, _kinova_raw.ForcesInfo_Actuator1_set)
    Actuator2 = _swig_property(_kinova_raw.ForcesInfo_Actuator2_get, _kinova_raw.ForcesInfo_Actuator2_set)
    Actuator3 = _swig_property(_kinova_raw.ForcesInfo_Actuator3_get, _kinova_raw.ForcesInfo_Actuator3_set)
    Actuator4 = _swig_property(_kinova_raw.ForcesInfo_Actuator4_get, _kinova_raw.ForcesInfo_Actuator4_set)
    Actuator5 = _swig_property(_kinova_raw.ForcesInfo_Actuator5_get, _kinova_raw.ForcesInfo_Actuator5_set)
    Actuator6 = _swig_property(_kinova_raw.ForcesInfo_Actuator6_get, _kinova_raw.ForcesInfo_Actuator6_set)
    Actuator7 = _swig_property(_kinova_raw.ForcesInfo_Actuator7_get, _kinova_raw.ForcesInfo_Actuator7_set)
    X = _swig_property(_kinova_raw.ForcesInfo_X_get, _kinova_raw.ForcesInfo_X_set)
    Y = _swig_property(_kinova_raw.ForcesInfo_Y_get, _kinova_raw.ForcesInfo_Y_set)
    Z = _swig_property(_kinova_raw.ForcesInfo_Z_get, _kinova_raw.ForcesInfo_Z_set)
    ThetaX = _swig_property(_kinova_raw.ForcesInfo_ThetaX_get, _kinova_raw.ForcesInfo_ThetaX_set)
    ThetaY = _swig_property(_kinova_raw.ForcesInfo_ThetaY_get, _kinova_raw.ForcesInfo_ThetaY_set)
    ThetaZ = _swig_property(_kinova_raw.ForcesInfo_ThetaZ_get, _kinova_raw.ForcesInfo_ThetaZ_set)

    def __init__(self):
        this = _kinova_raw.new_ForcesInfo()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_ForcesInfo
    __del__ = lambda self: None
ForcesInfo_swigregister = _kinova_raw.ForcesInfo_swigregister
ForcesInfo_swigregister(ForcesInfo)

class QuickStatus(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Finger1Status = _swig_property(_kinova_raw.QuickStatus_Finger1Status_get, _kinova_raw.QuickStatus_Finger1Status_set)
    Finger2Status = _swig_property(_kinova_raw.QuickStatus_Finger2Status_get, _kinova_raw.QuickStatus_Finger2Status_set)
    Finger3Status = _swig_property(_kinova_raw.QuickStatus_Finger3Status_get, _kinova_raw.QuickStatus_Finger3Status_set)
    RetractType = _swig_property(_kinova_raw.QuickStatus_RetractType_get, _kinova_raw.QuickStatus_RetractType_set)
    RetractComplexity = _swig_property(_kinova_raw.QuickStatus_RetractComplexity_get, _kinova_raw.QuickStatus_RetractComplexity_set)
    ControlEnableStatus = _swig_property(_kinova_raw.QuickStatus_ControlEnableStatus_get, _kinova_raw.QuickStatus_ControlEnableStatus_set)
    ControlActiveModule = _swig_property(_kinova_raw.QuickStatus_ControlActiveModule_get, _kinova_raw.QuickStatus_ControlActiveModule_set)
    ControlFrameType = _swig_property(_kinova_raw.QuickStatus_ControlFrameType_get, _kinova_raw.QuickStatus_ControlFrameType_set)
    CartesianFaultState = _swig_property(_kinova_raw.QuickStatus_CartesianFaultState_get, _kinova_raw.QuickStatus_CartesianFaultState_set)
    ForceControlStatus = _swig_property(_kinova_raw.QuickStatus_ForceControlStatus_get, _kinova_raw.QuickStatus_ForceControlStatus_set)
    CurrentLimitationStatus = _swig_property(_kinova_raw.QuickStatus_CurrentLimitationStatus_get, _kinova_raw.QuickStatus_CurrentLimitationStatus_set)
    RobotType = _swig_property(_kinova_raw.QuickStatus_RobotType_get, _kinova_raw.QuickStatus_RobotType_set)
    RobotEdition = _swig_property(_kinova_raw.QuickStatus_RobotEdition_get, _kinova_raw.QuickStatus_RobotEdition_set)
    TorqueSensorsStatus = _swig_property(_kinova_raw.QuickStatus_TorqueSensorsStatus_get, _kinova_raw.QuickStatus_TorqueSensorsStatus_set)

    def __init__(self):
        this = _kinova_raw.new_QuickStatus()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_QuickStatus
    __del__ = lambda self: None
QuickStatus_swigregister = _kinova_raw.QuickStatus_swigregister
QuickStatus_swigregister(QuickStatus)

class Finger(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    ID = _swig_property(_kinova_raw.Finger_ID_get, _kinova_raw.Finger_ID_set)
    ActualCommand = _swig_property(_kinova_raw.Finger_ActualCommand_get, _kinova_raw.Finger_ActualCommand_set)
    ActualSpeed = _swig_property(_kinova_raw.Finger_ActualSpeed_get, _kinova_raw.Finger_ActualSpeed_set)
    ActualForce = _swig_property(_kinova_raw.Finger_ActualForce_get, _kinova_raw.Finger_ActualForce_set)
    ActualAcceleration = _swig_property(_kinova_raw.Finger_ActualAcceleration_get, _kinova_raw.Finger_ActualAcceleration_set)
    ActualCurrent = _swig_property(_kinova_raw.Finger_ActualCurrent_get, _kinova_raw.Finger_ActualCurrent_set)
    ActualPosition = _swig_property(_kinova_raw.Finger_ActualPosition_get, _kinova_raw.Finger_ActualPosition_set)
    ActualAverageCurrent = _swig_property(_kinova_raw.Finger_ActualAverageCurrent_get, _kinova_raw.Finger_ActualAverageCurrent_set)
    ActualTemperature = _swig_property(_kinova_raw.Finger_ActualTemperature_get, _kinova_raw.Finger_ActualTemperature_set)
    CommunicationErrors = _swig_property(_kinova_raw.Finger_CommunicationErrors_get, _kinova_raw.Finger_CommunicationErrors_set)
    OscillatorTuningValue = _swig_property(_kinova_raw.Finger_OscillatorTuningValue_get, _kinova_raw.Finger_OscillatorTuningValue_set)
    CycleCount = _swig_property(_kinova_raw.Finger_CycleCount_get, _kinova_raw.Finger_CycleCount_set)
    RunTime = _swig_property(_kinova_raw.Finger_RunTime_get, _kinova_raw.Finger_RunTime_set)
    PeakMaxTemp = _swig_property(_kinova_raw.Finger_PeakMaxTemp_get, _kinova_raw.Finger_PeakMaxTemp_set)
    PeakMinTemp = _swig_property(_kinova_raw.Finger_PeakMinTemp_get, _kinova_raw.Finger_PeakMinTemp_set)
    PeakCurrent = _swig_property(_kinova_raw.Finger_PeakCurrent_get, _kinova_raw.Finger_PeakCurrent_set)
    MaxSpeed = _swig_property(_kinova_raw.Finger_MaxSpeed_get, _kinova_raw.Finger_MaxSpeed_set)
    MaxForce = _swig_property(_kinova_raw.Finger_MaxForce_get, _kinova_raw.Finger_MaxForce_set)
    MaxAcceleration = _swig_property(_kinova_raw.Finger_MaxAcceleration_get, _kinova_raw.Finger_MaxAcceleration_set)
    MaxCurrent = _swig_property(_kinova_raw.Finger_MaxCurrent_get, _kinova_raw.Finger_MaxCurrent_set)
    MaxAngle = _swig_property(_kinova_raw.Finger_MaxAngle_get, _kinova_raw.Finger_MaxAngle_set)
    MinAngle = _swig_property(_kinova_raw.Finger_MinAngle_get, _kinova_raw.Finger_MinAngle_set)
    DeviceID = _swig_property(_kinova_raw.Finger_DeviceID_get, _kinova_raw.Finger_DeviceID_set)
    CodeVersion = _swig_property(_kinova_raw.Finger_CodeVersion_get, _kinova_raw.Finger_CodeVersion_set)
    IsFingerInit = _swig_property(_kinova_raw.Finger_IsFingerInit_get, _kinova_raw.Finger_IsFingerInit_set)
    Index = _swig_property(_kinova_raw.Finger_Index_get, _kinova_raw.Finger_Index_set)
    FingerAddress = _swig_property(_kinova_raw.Finger_FingerAddress_get, _kinova_raw.Finger_FingerAddress_set)
    IsFingerConnected = _swig_property(_kinova_raw.Finger_IsFingerConnected_get, _kinova_raw.Finger_IsFingerConnected_set)

    def __init__(self):
        this = _kinova_raw.new_Finger()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_Finger
    __del__ = lambda self: None
Finger_swigregister = _kinova_raw.Finger_swigregister
Finger_swigregister(Finger)

class Gripper(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Model = _swig_property(_kinova_raw.Gripper_Model_get, _kinova_raw.Gripper_Model_set)
    Fingers = _swig_property(_kinova_raw.Gripper_Fingers_get, _kinova_raw.Gripper_Fingers_set)

    def __init__(self):
        this = _kinova_raw.new_Gripper()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_Gripper
    __del__ = lambda self: None
Gripper_swigregister = _kinova_raw.Gripper_swigregister
Gripper_swigregister(Gripper)

class ZoneShape(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    shapeType = _swig_property(_kinova_raw.ZoneShape_shapeType_get, _kinova_raw.ZoneShape_shapeType_set)
    Expansion1 = _swig_property(_kinova_raw.ZoneShape_Expansion1_get, _kinova_raw.ZoneShape_Expansion1_set)
    Points = _swig_property(_kinova_raw.ZoneShape_Points_get, _kinova_raw.ZoneShape_Points_set)

    def __init__(self):
        this = _kinova_raw.new_ZoneShape()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_ZoneShape
    __del__ = lambda self: None
ZoneShape_swigregister = _kinova_raw.ZoneShape_swigregister
ZoneShape_swigregister(ZoneShape)

class Zone(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    ID = _swig_property(_kinova_raw.Zone_ID_get, _kinova_raw.Zone_ID_set)
    Expansion1 = _swig_property(_kinova_raw.Zone_Expansion1_get, _kinova_raw.Zone_Expansion1_set)
    zoneShape = _swig_property(_kinova_raw.Zone_zoneShape_get, _kinova_raw.Zone_zoneShape_set)
    zoneLimitation = _swig_property(_kinova_raw.Zone_zoneLimitation_get, _kinova_raw.Zone_zoneLimitation_set)
    Expansion2 = _swig_property(_kinova_raw.Zone_Expansion2_get, _kinova_raw.Zone_Expansion2_set)

    def __init__(self):
        this = _kinova_raw.new_Zone()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_Zone
    __del__ = lambda self: None
Zone_swigregister = _kinova_raw.Zone_swigregister
Zone_swigregister(Zone)

class ZoneList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    NbZones = _swig_property(_kinova_raw.ZoneList_NbZones_get, _kinova_raw.ZoneList_NbZones_set)
    Expansion1 = _swig_property(_kinova_raw.ZoneList_Expansion1_get, _kinova_raw.ZoneList_Expansion1_set)
    Zones = _swig_property(_kinova_raw.ZoneList_Zones_get, _kinova_raw.ZoneList_Zones_set)

    def __init__(self):
        this = _kinova_raw.new_ZoneList()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_ZoneList
    __del__ = lambda self: None
ZoneList_swigregister = _kinova_raw.ZoneList_swigregister
ZoneList_swigregister(ZoneList)

class SystemStatus(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    JoystickActive = _swig_property(_kinova_raw.SystemStatus_JoystickActive_get, _kinova_raw.SystemStatus_JoystickActive_set)
    RetractStatus = _swig_property(_kinova_raw.SystemStatus_RetractStatus_get, _kinova_raw.SystemStatus_RetractStatus_set)
    DrinkingMode = _swig_property(_kinova_raw.SystemStatus_DrinkingMode_get, _kinova_raw.SystemStatus_DrinkingMode_set)
    ArmLaterality = _swig_property(_kinova_raw.SystemStatus_ArmLaterality_get, _kinova_raw.SystemStatus_ArmLaterality_set)
    TranslationActive = _swig_property(_kinova_raw.SystemStatus_TranslationActive_get, _kinova_raw.SystemStatus_TranslationActive_set)
    RotationActive = _swig_property(_kinova_raw.SystemStatus_RotationActive_get, _kinova_raw.SystemStatus_RotationActive_set)
    FingersActive = _swig_property(_kinova_raw.SystemStatus_FingersActive_get, _kinova_raw.SystemStatus_FingersActive_set)
    WarningOverchargeForce = _swig_property(_kinova_raw.SystemStatus_WarningOverchargeForce_get, _kinova_raw.SystemStatus_WarningOverchargeForce_set)
    WarningOverchargeFingers = _swig_property(_kinova_raw.SystemStatus_WarningOverchargeFingers_get, _kinova_raw.SystemStatus_WarningOverchargeFingers_set)
    WarningLowVoltage = _swig_property(_kinova_raw.SystemStatus_WarningLowVoltage_get, _kinova_raw.SystemStatus_WarningLowVoltage_set)
    MajorErrorOccured = _swig_property(_kinova_raw.SystemStatus_MajorErrorOccured_get, _kinova_raw.SystemStatus_MajorErrorOccured_set)

    def __init__(self):
        this = _kinova_raw.new_SystemStatus()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_SystemStatus
    __del__ = lambda self: None
SystemStatus_swigregister = _kinova_raw.SystemStatus_swigregister
SystemStatus_swigregister(SystemStatus)

class GeneralInformations(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    TimeAbsolute = _swig_property(_kinova_raw.GeneralInformations_TimeAbsolute_get, _kinova_raw.GeneralInformations_TimeAbsolute_set)
    TimeFromStartup = _swig_property(_kinova_raw.GeneralInformations_TimeFromStartup_get, _kinova_raw.GeneralInformations_TimeFromStartup_set)
    IndexStartup = _swig_property(_kinova_raw.GeneralInformations_IndexStartup_get, _kinova_raw.GeneralInformations_IndexStartup_set)
    ExpansionLong1 = _swig_property(_kinova_raw.GeneralInformations_ExpansionLong1_get, _kinova_raw.GeneralInformations_ExpansionLong1_set)
    TimeStampSavings = _swig_property(_kinova_raw.GeneralInformations_TimeStampSavings_get, _kinova_raw.GeneralInformations_TimeStampSavings_set)
    ExpansionFloat = _swig_property(_kinova_raw.GeneralInformations_ExpansionFloat_get, _kinova_raw.GeneralInformations_ExpansionFloat_set)
    SupplyVoltage = _swig_property(_kinova_raw.GeneralInformations_SupplyVoltage_get, _kinova_raw.GeneralInformations_SupplyVoltage_set)
    TotalCurrent = _swig_property(_kinova_raw.GeneralInformations_TotalCurrent_get, _kinova_raw.GeneralInformations_TotalCurrent_set)
    Power = _swig_property(_kinova_raw.GeneralInformations_Power_get, _kinova_raw.GeneralInformations_Power_set)
    AveragePower = _swig_property(_kinova_raw.GeneralInformations_AveragePower_get, _kinova_raw.GeneralInformations_AveragePower_set)
    AccelerationX = _swig_property(_kinova_raw.GeneralInformations_AccelerationX_get, _kinova_raw.GeneralInformations_AccelerationX_set)
    AccelerationY = _swig_property(_kinova_raw.GeneralInformations_AccelerationY_get, _kinova_raw.GeneralInformations_AccelerationY_set)
    AccelerationZ = _swig_property(_kinova_raw.GeneralInformations_AccelerationZ_get, _kinova_raw.GeneralInformations_AccelerationZ_set)
    SensorExpansion1 = _swig_property(_kinova_raw.GeneralInformations_SensorExpansion1_get, _kinova_raw.GeneralInformations_SensorExpansion1_set)
    SensorExpansion2 = _swig_property(_kinova_raw.GeneralInformations_SensorExpansion2_get, _kinova_raw.GeneralInformations_SensorExpansion2_set)
    SensorExpansion3 = _swig_property(_kinova_raw.GeneralInformations_SensorExpansion3_get, _kinova_raw.GeneralInformations_SensorExpansion3_set)
    CodeVersion = _swig_property(_kinova_raw.GeneralInformations_CodeVersion_get, _kinova_raw.GeneralInformations_CodeVersion_set)
    CodeRevision = _swig_property(_kinova_raw.GeneralInformations_CodeRevision_get, _kinova_raw.GeneralInformations_CodeRevision_set)
    Status = _swig_property(_kinova_raw.GeneralInformations_Status_get, _kinova_raw.GeneralInformations_Status_set)
    Controller = _swig_property(_kinova_raw.GeneralInformations_Controller_get, _kinova_raw.GeneralInformations_Controller_set)
    ControlMode = _swig_property(_kinova_raw.GeneralInformations_ControlMode_get, _kinova_raw.GeneralInformations_ControlMode_set)
    HandMode = _swig_property(_kinova_raw.GeneralInformations_HandMode_get, _kinova_raw.GeneralInformations_HandMode_set)
    ConnectedActuatorCount = _swig_property(_kinova_raw.GeneralInformations_ConnectedActuatorCount_get, _kinova_raw.GeneralInformations_ConnectedActuatorCount_set)
    PositionType = _swig_property(_kinova_raw.GeneralInformations_PositionType_get, _kinova_raw.GeneralInformations_PositionType_set)
    ErrorsSpiExpansion1 = _swig_property(_kinova_raw.GeneralInformations_ErrorsSpiExpansion1_get, _kinova_raw.GeneralInformations_ErrorsSpiExpansion1_set)
    ErrorsSpiExpansion2 = _swig_property(_kinova_raw.GeneralInformations_ErrorsSpiExpansion2_get, _kinova_raw.GeneralInformations_ErrorsSpiExpansion2_set)
    ErrorsMainSPICount = _swig_property(_kinova_raw.GeneralInformations_ErrorsMainSPICount_get, _kinova_raw.GeneralInformations_ErrorsMainSPICount_set)
    ErrorsExternalSPICount = _swig_property(_kinova_raw.GeneralInformations_ErrorsExternalSPICount_get, _kinova_raw.GeneralInformations_ErrorsExternalSPICount_set)
    ErrorsMainCANCount = _swig_property(_kinova_raw.GeneralInformations_ErrorsMainCANCount_get, _kinova_raw.GeneralInformations_ErrorsMainCANCount_set)
    ErrorsExternalCANCount = _swig_property(_kinova_raw.GeneralInformations_ErrorsExternalCANCount_get, _kinova_raw.GeneralInformations_ErrorsExternalCANCount_set)
    ActualSystemStatus = _swig_property(_kinova_raw.GeneralInformations_ActualSystemStatus_get, _kinova_raw.GeneralInformations_ActualSystemStatus_set)
    Position = _swig_property(_kinova_raw.GeneralInformations_Position_get, _kinova_raw.GeneralInformations_Position_set)
    Command = _swig_property(_kinova_raw.GeneralInformations_Command_get, _kinova_raw.GeneralInformations_Command_set)
    Current = _swig_property(_kinova_raw.GeneralInformations_Current_get, _kinova_raw.GeneralInformations_Current_set)
    Force = _swig_property(_kinova_raw.GeneralInformations_Force_get, _kinova_raw.GeneralInformations_Force_set)
    ActualLimitations = _swig_property(_kinova_raw.GeneralInformations_ActualLimitations_get, _kinova_raw.GeneralInformations_ActualLimitations_set)
    ControlIncrement = _swig_property(_kinova_raw.GeneralInformations_ControlIncrement_get, _kinova_raw.GeneralInformations_ControlIncrement_set)
    FingerControlIncrement = _swig_property(_kinova_raw.GeneralInformations_FingerControlIncrement_get, _kinova_raw.GeneralInformations_FingerControlIncrement_set)
    ActualJoystickCommand = _swig_property(_kinova_raw.GeneralInformations_ActualJoystickCommand_get, _kinova_raw.GeneralInformations_ActualJoystickCommand_set)
    PeripheralsConnected = _swig_property(_kinova_raw.GeneralInformations_PeripheralsConnected_get, _kinova_raw.GeneralInformations_PeripheralsConnected_set)
    PeripheralsDeviceID = _swig_property(_kinova_raw.GeneralInformations_PeripheralsDeviceID_get, _kinova_raw.GeneralInformations_PeripheralsDeviceID_set)
    ActuatorsTemperatures = _swig_property(_kinova_raw.GeneralInformations_ActuatorsTemperatures_get, _kinova_raw.GeneralInformations_ActuatorsTemperatures_set)
    FingersTemperatures = _swig_property(_kinova_raw.GeneralInformations_FingersTemperatures_get, _kinova_raw.GeneralInformations_FingersTemperatures_set)
    FutureTemperatures = _swig_property(_kinova_raw.GeneralInformations_FutureTemperatures_get, _kinova_raw.GeneralInformations_FutureTemperatures_set)
    ActuatorsCommErrors = _swig_property(_kinova_raw.GeneralInformations_ActuatorsCommErrors_get, _kinova_raw.GeneralInformations_ActuatorsCommErrors_set)
    FingersCommErrors = _swig_property(_kinova_raw.GeneralInformations_FingersCommErrors_get, _kinova_raw.GeneralInformations_FingersCommErrors_set)
    ExpansionLong2 = _swig_property(_kinova_raw.GeneralInformations_ExpansionLong2_get, _kinova_raw.GeneralInformations_ExpansionLong2_set)
    ControlTimeAbsolute = _swig_property(_kinova_raw.GeneralInformations_ControlTimeAbsolute_get, _kinova_raw.GeneralInformations_ControlTimeAbsolute_set)
    ControlTimeFromStartup = _swig_property(_kinova_raw.GeneralInformations_ControlTimeFromStartup_get, _kinova_raw.GeneralInformations_ControlTimeFromStartup_set)
    ExpansionsBytes = _swig_property(_kinova_raw.GeneralInformations_ExpansionsBytes_get, _kinova_raw.GeneralInformations_ExpansionsBytes_set)

    def __init__(self):
        this = _kinova_raw.new_GeneralInformations()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_GeneralInformations
    __del__ = lambda self: None
GeneralInformations_swigregister = _kinova_raw.GeneralInformations_swigregister
GeneralInformations_swigregister(GeneralInformations)

class AngularAcceleration(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Actuator1_X = _swig_property(_kinova_raw.AngularAcceleration_Actuator1_X_get, _kinova_raw.AngularAcceleration_Actuator1_X_set)
    Actuator1_Y = _swig_property(_kinova_raw.AngularAcceleration_Actuator1_Y_get, _kinova_raw.AngularAcceleration_Actuator1_Y_set)
    Actuator1_Z = _swig_property(_kinova_raw.AngularAcceleration_Actuator1_Z_get, _kinova_raw.AngularAcceleration_Actuator1_Z_set)
    Actuator2_X = _swig_property(_kinova_raw.AngularAcceleration_Actuator2_X_get, _kinova_raw.AngularAcceleration_Actuator2_X_set)
    Actuator2_Y = _swig_property(_kinova_raw.AngularAcceleration_Actuator2_Y_get, _kinova_raw.AngularAcceleration_Actuator2_Y_set)
    Actuator2_Z = _swig_property(_kinova_raw.AngularAcceleration_Actuator2_Z_get, _kinova_raw.AngularAcceleration_Actuator2_Z_set)
    Actuator3_X = _swig_property(_kinova_raw.AngularAcceleration_Actuator3_X_get, _kinova_raw.AngularAcceleration_Actuator3_X_set)
    Actuator3_Y = _swig_property(_kinova_raw.AngularAcceleration_Actuator3_Y_get, _kinova_raw.AngularAcceleration_Actuator3_Y_set)
    Actuator3_Z = _swig_property(_kinova_raw.AngularAcceleration_Actuator3_Z_get, _kinova_raw.AngularAcceleration_Actuator3_Z_set)
    Actuator4_X = _swig_property(_kinova_raw.AngularAcceleration_Actuator4_X_get, _kinova_raw.AngularAcceleration_Actuator4_X_set)
    Actuator4_Y = _swig_property(_kinova_raw.AngularAcceleration_Actuator4_Y_get, _kinova_raw.AngularAcceleration_Actuator4_Y_set)
    Actuator4_Z = _swig_property(_kinova_raw.AngularAcceleration_Actuator4_Z_get, _kinova_raw.AngularAcceleration_Actuator4_Z_set)
    Actuator5_X = _swig_property(_kinova_raw.AngularAcceleration_Actuator5_X_get, _kinova_raw.AngularAcceleration_Actuator5_X_set)
    Actuator5_Y = _swig_property(_kinova_raw.AngularAcceleration_Actuator5_Y_get, _kinova_raw.AngularAcceleration_Actuator5_Y_set)
    Actuator5_Z = _swig_property(_kinova_raw.AngularAcceleration_Actuator5_Z_get, _kinova_raw.AngularAcceleration_Actuator5_Z_set)
    Actuator6_X = _swig_property(_kinova_raw.AngularAcceleration_Actuator6_X_get, _kinova_raw.AngularAcceleration_Actuator6_X_set)
    Actuator6_Y = _swig_property(_kinova_raw.AngularAcceleration_Actuator6_Y_get, _kinova_raw.AngularAcceleration_Actuator6_Y_set)
    Actuator6_Z = _swig_property(_kinova_raw.AngularAcceleration_Actuator6_Z_get, _kinova_raw.AngularAcceleration_Actuator6_Z_set)
    Actuator7_X = _swig_property(_kinova_raw.AngularAcceleration_Actuator7_X_get, _kinova_raw.AngularAcceleration_Actuator7_X_set)
    Actuator7_Y = _swig_property(_kinova_raw.AngularAcceleration_Actuator7_Y_get, _kinova_raw.AngularAcceleration_Actuator7_Y_set)
    Actuator7_Z = _swig_property(_kinova_raw.AngularAcceleration_Actuator7_Z_get, _kinova_raw.AngularAcceleration_Actuator7_Z_set)

    def InitStruct(self):
        return _kinova_raw.AngularAcceleration_InitStruct(self)

    def __init__(self):
        this = _kinova_raw.new_AngularAcceleration()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_AngularAcceleration
    __del__ = lambda self: None
AngularAcceleration_swigregister = _kinova_raw.AngularAcceleration_swigregister
AngularAcceleration_swigregister(AngularAcceleration)

class PeripheralInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Handle = _swig_property(_kinova_raw.PeripheralInfo_Handle_get, _kinova_raw.PeripheralInfo_Handle_set)
    Type = _swig_property(_kinova_raw.PeripheralInfo_Type_get, _kinova_raw.PeripheralInfo_Type_set)
    Port = _swig_property(_kinova_raw.PeripheralInfo_Port_get, _kinova_raw.PeripheralInfo_Port_set)
    Address = _swig_property(_kinova_raw.PeripheralInfo_Address_get, _kinova_raw.PeripheralInfo_Address_set)
    CodeVersion = _swig_property(_kinova_raw.PeripheralInfo_CodeVersion_get, _kinova_raw.PeripheralInfo_CodeVersion_set)

    def __init__(self):
        this = _kinova_raw.new_PeripheralInfo()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_PeripheralInfo
    __del__ = lambda self: None
PeripheralInfo_swigregister = _kinova_raw.PeripheralInfo_swigregister
PeripheralInfo_swigregister(PeripheralInfo)


_kinova_raw.MANUAL_INPUT_swigconstant(_kinova_raw)
MANUAL_INPUT = _kinova_raw.MANUAL_INPUT

_kinova_raw.OPTIMAL_swigconstant(_kinova_raw)
OPTIMAL = _kinova_raw.OPTIMAL

_kinova_raw.JACOV1_ASSISTIVE_swigconstant(_kinova_raw)
JACOV1_ASSISTIVE = _kinova_raw.JACOV1_ASSISTIVE

_kinova_raw.MICO_6DOF_SERVICE_swigconstant(_kinova_raw)
MICO_6DOF_SERVICE = _kinova_raw.MICO_6DOF_SERVICE

_kinova_raw.MICO_4DOF_SERVICE_swigconstant(_kinova_raw)
MICO_4DOF_SERVICE = _kinova_raw.MICO_4DOF_SERVICE

_kinova_raw.JACOV2_6DOF_SERVICE_swigconstant(_kinova_raw)
JACOV2_6DOF_SERVICE = _kinova_raw.JACOV2_6DOF_SERVICE

_kinova_raw.JACOV2_4DOF_SERVICE_swigconstant(_kinova_raw)
JACOV2_4DOF_SERVICE = _kinova_raw.JACOV2_4DOF_SERVICE

_kinova_raw.MICO_6DOF_ASSISTIVE_swigconstant(_kinova_raw)
MICO_6DOF_ASSISTIVE = _kinova_raw.MICO_6DOF_ASSISTIVE

_kinova_raw.JACOV2_6DOF_ASSISTIVE_swigconstant(_kinova_raw)
JACOV2_6DOF_ASSISTIVE = _kinova_raw.JACOV2_6DOF_ASSISTIVE

_kinova_raw.SPHERICAL_6DOF_SERVICE_swigconstant(_kinova_raw)
SPHERICAL_6DOF_SERVICE = _kinova_raw.SPHERICAL_6DOF_SERVICE

_kinova_raw.SPHERICAL_7DOF_SERVICE_swigconstant(_kinova_raw)
SPHERICAL_7DOF_SERVICE = _kinova_raw.SPHERICAL_7DOF_SERVICE

_kinova_raw.ROBOT_ERROR_swigconstant(_kinova_raw)
ROBOT_ERROR = _kinova_raw.ROBOT_ERROR

_kinova_raw.GENERIC_ROBOT_swigconstant(_kinova_raw)
GENERIC_ROBOT = _kinova_raw.GENERIC_ROBOT

_kinova_raw.NO_ERROR_KINOVA_swigconstant(_kinova_raw)
NO_ERROR_KINOVA = _kinova_raw.NO_ERROR_KINOVA

_kinova_raw.UNKNOWN_ERROR_swigconstant(_kinova_raw)
UNKNOWN_ERROR = _kinova_raw.UNKNOWN_ERROR

_kinova_raw.ERROR_LOAD_USB_LIBRARY_swigconstant(_kinova_raw)
ERROR_LOAD_USB_LIBRARY = _kinova_raw.ERROR_LOAD_USB_LIBRARY

_kinova_raw.ERROR_OPEN_METHOD_swigconstant(_kinova_raw)
ERROR_OPEN_METHOD = _kinova_raw.ERROR_OPEN_METHOD

_kinova_raw.ERROR_WRITE_METHOD_swigconstant(_kinova_raw)
ERROR_WRITE_METHOD = _kinova_raw.ERROR_WRITE_METHOD

_kinova_raw.ERROR_READ_METHOD_swigconstant(_kinova_raw)
ERROR_READ_METHOD = _kinova_raw.ERROR_READ_METHOD

_kinova_raw.ERROR_READ_INT_METHOD_swigconstant(_kinova_raw)
ERROR_READ_INT_METHOD = _kinova_raw.ERROR_READ_INT_METHOD

_kinova_raw.ERROR_FREE_LIBRARY_swigconstant(_kinova_raw)
ERROR_FREE_LIBRARY = _kinova_raw.ERROR_FREE_LIBRARY

_kinova_raw.ERROR_JACO_CONNECTION_swigconstant(_kinova_raw)
ERROR_JACO_CONNECTION = _kinova_raw.ERROR_JACO_CONNECTION

_kinova_raw.ERROR_CLAIM_INTERFACE_swigconstant(_kinova_raw)
ERROR_CLAIM_INTERFACE = _kinova_raw.ERROR_CLAIM_INTERFACE

_kinova_raw.ERROR_UNKNOWN_DEVICE_swigconstant(_kinova_raw)
ERROR_UNKNOWN_DEVICE = _kinova_raw.ERROR_UNKNOWN_DEVICE

_kinova_raw.ERROR_NOT_INITIALIZED_swigconstant(_kinova_raw)
ERROR_NOT_INITIALIZED = _kinova_raw.ERROR_NOT_INITIALIZED

_kinova_raw.ERROR_LIBUSB_NO_DEVICE_swigconstant(_kinova_raw)
ERROR_LIBUSB_NO_DEVICE = _kinova_raw.ERROR_LIBUSB_NO_DEVICE

_kinova_raw.ERROR_LIBUSB_BUSY_swigconstant(_kinova_raw)
ERROR_LIBUSB_BUSY = _kinova_raw.ERROR_LIBUSB_BUSY

_kinova_raw.ERROR_LIBUSB_NOT_SUPPORTED_swigconstant(_kinova_raw)
ERROR_LIBUSB_NOT_SUPPORTED = _kinova_raw.ERROR_LIBUSB_NOT_SUPPORTED

_kinova_raw.ERROR_SENDPACKET_UNKNOWN_swigconstant(_kinova_raw)
ERROR_SENDPACKET_UNKNOWN = _kinova_raw.ERROR_SENDPACKET_UNKNOWN

_kinova_raw.ERROR_NO_DEVICE_FOUND_swigconstant(_kinova_raw)
ERROR_NO_DEVICE_FOUND = _kinova_raw.ERROR_NO_DEVICE_FOUND

_kinova_raw.ERROR_OPERATION_INCOMPLETED_swigconstant(_kinova_raw)
ERROR_OPERATION_INCOMPLETED = _kinova_raw.ERROR_OPERATION_INCOMPLETED

_kinova_raw.ERROR_RS485_INVALID_HANDLE_swigconstant(_kinova_raw)
ERROR_RS485_INVALID_HANDLE = _kinova_raw.ERROR_RS485_INVALID_HANDLE

_kinova_raw.ERROR_RS485_IO_PENDING_swigconstant(_kinova_raw)
ERROR_RS485_IO_PENDING = _kinova_raw.ERROR_RS485_IO_PENDING

_kinova_raw.ERROR_RS485_NOT_ENOUGH_MEMORY_swigconstant(_kinova_raw)
ERROR_RS485_NOT_ENOUGH_MEMORY = _kinova_raw.ERROR_RS485_NOT_ENOUGH_MEMORY

_kinova_raw.ERROR_RS485_TIMEOUT_swigconstant(_kinova_raw)
ERROR_RS485_TIMEOUT = _kinova_raw.ERROR_RS485_TIMEOUT

_kinova_raw.ERROR_FUNCTION_NOT_ACCESSIBLE_swigconstant(_kinova_raw)
ERROR_FUNCTION_NOT_ACCESSIBLE = _kinova_raw.ERROR_FUNCTION_NOT_ACCESSIBLE

_kinova_raw.ERROR_COMM_TIMEOUT_swigconstant(_kinova_raw)
ERROR_COMM_TIMEOUT = _kinova_raw.ERROR_COMM_TIMEOUT

_kinova_raw.ERROR_NACK_RECEIVED_swigconstant(_kinova_raw)
ERROR_NACK_RECEIVED = _kinova_raw.ERROR_NACK_RECEIVED

_kinova_raw.RS485_MSG_REPORT_ERROR_swigconstant(_kinova_raw)
RS485_MSG_REPORT_ERROR = _kinova_raw.RS485_MSG_REPORT_ERROR

_kinova_raw.RS485_MSG_CLEAR_FAULT_FLAG_swigconstant(_kinova_raw)
RS485_MSG_CLEAR_FAULT_FLAG = _kinova_raw.RS485_MSG_CLEAR_FAULT_FLAG

_kinova_raw.RS485_MSG_NACK_swigconstant(_kinova_raw)
RS485_MSG_NACK = _kinova_raw.RS485_MSG_NACK

_kinova_raw.RS485_MSG_ACK_swigconstant(_kinova_raw)
RS485_MSG_ACK = _kinova_raw.RS485_MSG_ACK

_kinova_raw.RS485_MSG_SET_ADDRESS_swigconstant(_kinova_raw)
RS485_MSG_SET_ADDRESS = _kinova_raw.RS485_MSG_SET_ADDRESS

_kinova_raw.RS485_MSG_GET_ACTUALPOSITION_swigconstant(_kinova_raw)
RS485_MSG_GET_ACTUALPOSITION = _kinova_raw.RS485_MSG_GET_ACTUALPOSITION

_kinova_raw.RS485_MSG_SEND_ACTUALPOSITION_swigconstant(_kinova_raw)
RS485_MSG_SEND_ACTUALPOSITION = _kinova_raw.RS485_MSG_SEND_ACTUALPOSITION

_kinova_raw.RS485_MSG_STAR_ASSERV_swigconstant(_kinova_raw)
RS485_MSG_STAR_ASSERV = _kinova_raw.RS485_MSG_STAR_ASSERV

_kinova_raw.RS485_MSG_STOP_ASSERV_swigconstant(_kinova_raw)
RS485_MSG_STOP_ASSERV = _kinova_raw.RS485_MSG_STOP_ASSERV

_kinova_raw.RS485_MSG_FEEDTHROUGH_swigconstant(_kinova_raw)
RS485_MSG_FEEDTHROUGH = _kinova_raw.RS485_MSG_FEEDTHROUGH

_kinova_raw.RS485_MSG_GET_POSITION_COMMAND_swigconstant(_kinova_raw)
RS485_MSG_GET_POSITION_COMMAND = _kinova_raw.RS485_MSG_GET_POSITION_COMMAND

_kinova_raw.RS485_MSG_SEND_POSITION_CURRENT_swigconstant(_kinova_raw)
RS485_MSG_SEND_POSITION_CURRENT = _kinova_raw.RS485_MSG_SEND_POSITION_CURRENT

_kinova_raw.RS485_MSG_GET_POSITION_COMMAND_ALL_VALUES_swigconstant(_kinova_raw)
RS485_MSG_GET_POSITION_COMMAND_ALL_VALUES = _kinova_raw.RS485_MSG_GET_POSITION_COMMAND_ALL_VALUES

_kinova_raw.RS485_MSG_SEND_ALL_VALUES_1_swigconstant(_kinova_raw)
RS485_MSG_SEND_ALL_VALUES_1 = _kinova_raw.RS485_MSG_SEND_ALL_VALUES_1

_kinova_raw.RS485_MSG_SEND_ALL_VALUES_2_swigconstant(_kinova_raw)
RS485_MSG_SEND_ALL_VALUES_2 = _kinova_raw.RS485_MSG_SEND_ALL_VALUES_2

_kinova_raw.RS485_MSG_SEND_ALL_VALUES_3_swigconstant(_kinova_raw)
RS485_MSG_SEND_ALL_VALUES_3 = _kinova_raw.RS485_MSG_SEND_ALL_VALUES_3

_kinova_raw.RS485_MSG_POSITION_MAX_MIN_swigconstant(_kinova_raw)
RS485_MSG_POSITION_MAX_MIN = _kinova_raw.RS485_MSG_POSITION_MAX_MIN

_kinova_raw.RS485_MSG_KP_GAIN_swigconstant(_kinova_raw)
RS485_MSG_KP_GAIN = _kinova_raw.RS485_MSG_KP_GAIN

_kinova_raw.RS485_MSG_PROGRAM_JOINT_ZERO_swigconstant(_kinova_raw)
RS485_MSG_PROGRAM_JOINT_ZERO = _kinova_raw.RS485_MSG_PROGRAM_JOINT_ZERO

_kinova_raw.RS485_MSG_KI_KD_GAIN_swigconstant(_kinova_raw)
RS485_MSG_KI_KD_GAIN = _kinova_raw.RS485_MSG_KI_KD_GAIN

_kinova_raw.RS485_MSG_GET_CODE_VERSION_swigconstant(_kinova_raw)
RS485_MSG_GET_CODE_VERSION = _kinova_raw.RS485_MSG_GET_CODE_VERSION

_kinova_raw.RS485_MSG_SEND_CODE_VERSION_swigconstant(_kinova_raw)
RS485_MSG_SEND_CODE_VERSION = _kinova_raw.RS485_MSG_SEND_CODE_VERSION

_kinova_raw.RS485_MSG_GET_DEVICE_INFO_swigconstant(_kinova_raw)
RS485_MSG_GET_DEVICE_INFO = _kinova_raw.RS485_MSG_GET_DEVICE_INFO

_kinova_raw.RS485_MSG_SEND_DEVICE_INFO_swigconstant(_kinova_raw)
RS485_MSG_SEND_DEVICE_INFO = _kinova_raw.RS485_MSG_SEND_DEVICE_INFO

_kinova_raw.RS485_MSG_GET_TEMPERATURE_swigconstant(_kinova_raw)
RS485_MSG_GET_TEMPERATURE = _kinova_raw.RS485_MSG_GET_TEMPERATURE

_kinova_raw.RS485_MSG_SET_TEMPERATURE_swigconstant(_kinova_raw)
RS485_MSG_SET_TEMPERATURE = _kinova_raw.RS485_MSG_SET_TEMPERATURE

_kinova_raw.RS485_SET_PID_FILTERS_swigconstant(_kinova_raw)
RS485_SET_PID_FILTERS = _kinova_raw.RS485_SET_PID_FILTERS

_kinova_raw.RS485_SET_ZERO_TORQUESENSOR_swigconstant(_kinova_raw)
RS485_SET_ZERO_TORQUESENSOR = _kinova_raw.RS485_SET_ZERO_TORQUESENSOR

_kinova_raw.RS485_SET_GAIN_TORQUESENSOR_swigconstant(_kinova_raw)
RS485_SET_GAIN_TORQUESENSOR = _kinova_raw.RS485_SET_GAIN_TORQUESENSOR

_kinova_raw.RS485_SET_CONTROL_WITH_ENCODER_swigconstant(_kinova_raw)
RS485_SET_CONTROL_WITH_ENCODER = _kinova_raw.RS485_SET_CONTROL_WITH_ENCODER

_kinova_raw.RS485_GET_ENCODER_STATUSSES_swigconstant(_kinova_raw)
RS485_GET_ENCODER_STATUSSES = _kinova_raw.RS485_GET_ENCODER_STATUSSES

_kinova_raw.RS485_SET_PID_ADVANCED_PARAMETERS_swigconstant(_kinova_raw)
RS485_SET_PID_ADVANCED_PARAMETERS = _kinova_raw.RS485_SET_PID_ADVANCED_PARAMETERS

_kinova_raw.COMMUNICATION_TIME_OUT_swigconstant(_kinova_raw)
COMMUNICATION_TIME_OUT = _kinova_raw.COMMUNICATION_TIME_OUT

_kinova_raw.PACKET_SIZE_swigconstant(_kinova_raw)
PACKET_SIZE = _kinova_raw.PACKET_SIZE

_kinova_raw.ETH_PACKET_SIZE_swigconstant(_kinova_raw)
ETH_PACKET_SIZE = _kinova_raw.ETH_PACKET_SIZE

_kinova_raw.PACKET_DATA_SIZE_swigconstant(_kinova_raw)
PACKET_DATA_SIZE = _kinova_raw.PACKET_DATA_SIZE

_kinova_raw.ETH_PACKET_DATA_SIZE_swigconstant(_kinova_raw)
ETH_PACKET_DATA_SIZE = _kinova_raw.ETH_PACKET_DATA_SIZE

_kinova_raw.PACKET_MAX_DATA_SIZE_swigconstant(_kinova_raw)
PACKET_MAX_DATA_SIZE = _kinova_raw.PACKET_MAX_DATA_SIZE

_kinova_raw.PACKET_HEADER_SIZE_swigconstant(_kinova_raw)
PACKET_HEADER_SIZE = _kinova_raw.PACKET_HEADER_SIZE

_kinova_raw.ETH_PACKET_HEADER_SIZE_swigconstant(_kinova_raw)
ETH_PACKET_HEADER_SIZE = _kinova_raw.ETH_PACKET_HEADER_SIZE

_kinova_raw.COMM_LAYER_VERSION_swigconstant(_kinova_raw)
COMM_LAYER_VERSION = _kinova_raw.COMM_LAYER_VERSION

_kinova_raw.SERIAL_LENGTH_swigconstant(_kinova_raw)
SERIAL_LENGTH = _kinova_raw.SERIAL_LENGTH

_kinova_raw.MAX_KINOVA_DEVICE_swigconstant(_kinova_raw)
MAX_KINOVA_DEVICE = _kinova_raw.MAX_KINOVA_DEVICE

_kinova_raw.RS485_MESSAGE_SIZE_swigconstant(_kinova_raw)
RS485_MESSAGE_SIZE = _kinova_raw.RS485_MESSAGE_SIZE

_kinova_raw.RS485_MESSAGE_MAX_COUNT_swigconstant(_kinova_raw)
RS485_MESSAGE_MAX_COUNT = _kinova_raw.RS485_MESSAGE_MAX_COUNT
class Packet(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    IdPacket = _swig_property(_kinova_raw.Packet_IdPacket_get, _kinova_raw.Packet_IdPacket_set)
    TotalPacketCount = _swig_property(_kinova_raw.Packet_TotalPacketCount_get, _kinova_raw.Packet_TotalPacketCount_set)
    IdCommand = _swig_property(_kinova_raw.Packet_IdCommand_get, _kinova_raw.Packet_IdCommand_set)
    TotalDataSize = _swig_property(_kinova_raw.Packet_TotalDataSize_get, _kinova_raw.Packet_TotalDataSize_set)
    Data = _swig_property(_kinova_raw.Packet_Data_get, _kinova_raw.Packet_Data_set)

    def __init__(self):
        this = _kinova_raw.new_Packet()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_Packet
    __del__ = lambda self: None
Packet_swigregister = _kinova_raw.Packet_swigregister
Packet_swigregister(Packet)

class PacketList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    packets = _swig_property(_kinova_raw.PacketList_packets_get, _kinova_raw.PacketList_packets_set)

    def __init__(self):
        this = _kinova_raw.new_PacketList()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_PacketList
    __del__ = lambda self: None
PacketList_swigregister = _kinova_raw.PacketList_swigregister
PacketList_swigregister(PacketList)

class KinovaDevice(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    SerialNumber = _swig_property(_kinova_raw.KinovaDevice_SerialNumber_get, _kinova_raw.KinovaDevice_SerialNumber_set)
    Model = _swig_property(_kinova_raw.KinovaDevice_Model_get, _kinova_raw.KinovaDevice_Model_set)
    VersionMajor = _swig_property(_kinova_raw.KinovaDevice_VersionMajor_get, _kinova_raw.KinovaDevice_VersionMajor_set)
    VersionMinor = _swig_property(_kinova_raw.KinovaDevice_VersionMinor_get, _kinova_raw.KinovaDevice_VersionMinor_set)
    VersionRelease = _swig_property(_kinova_raw.KinovaDevice_VersionRelease_get, _kinova_raw.KinovaDevice_VersionRelease_set)
    DeviceType = _swig_property(_kinova_raw.KinovaDevice_DeviceType_get, _kinova_raw.KinovaDevice_DeviceType_set)
    DeviceID = _swig_property(_kinova_raw.KinovaDevice_DeviceID_get, _kinova_raw.KinovaDevice_DeviceID_set)

    def __init__(self):
        this = _kinova_raw.new_KinovaDevice()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_KinovaDevice
    __del__ = lambda self: None
KinovaDevice_swigregister = _kinova_raw.KinovaDevice_swigregister
KinovaDevice_swigregister(KinovaDevice)

class RS485_Message(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    Command = _swig_property(_kinova_raw.RS485_Message_Command_get, _kinova_raw.RS485_Message_Command_set)
    SourceAddress = _swig_property(_kinova_raw.RS485_Message_SourceAddress_get, _kinova_raw.RS485_Message_SourceAddress_set)
    DestinationAddress = _swig_property(_kinova_raw.RS485_Message_DestinationAddress_get, _kinova_raw.RS485_Message_DestinationAddress_set)

    def __init__(self):
        this = _kinova_raw.new_RS485_Message()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_RS485_Message
    __del__ = lambda self: None
RS485_Message_swigregister = _kinova_raw.RS485_Message_swigregister
RS485_Message_swigregister(RS485_Message)

class EthernetCommConfig(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    localIpAddress = _swig_property(_kinova_raw.EthernetCommConfig_localIpAddress_get, _kinova_raw.EthernetCommConfig_localIpAddress_set)
    subnetMask = _swig_property(_kinova_raw.EthernetCommConfig_subnetMask_get, _kinova_raw.EthernetCommConfig_subnetMask_set)
    robotIpAddress = _swig_property(_kinova_raw.EthernetCommConfig_robotIpAddress_get, _kinova_raw.EthernetCommConfig_robotIpAddress_set)
    localCmdport = _swig_property(_kinova_raw.EthernetCommConfig_localCmdport_get, _kinova_raw.EthernetCommConfig_localCmdport_set)
    localBcastPort = _swig_property(_kinova_raw.EthernetCommConfig_localBcastPort_get, _kinova_raw.EthernetCommConfig_localBcastPort_set)
    robotPort = _swig_property(_kinova_raw.EthernetCommConfig_robotPort_get, _kinova_raw.EthernetCommConfig_robotPort_set)
    rxTimeOutInMs = _swig_property(_kinova_raw.EthernetCommConfig_rxTimeOutInMs_get, _kinova_raw.EthernetCommConfig_rxTimeOutInMs_set)

    def __init__(self):
        this = _kinova_raw.new_EthernetCommConfig()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _kinova_raw.delete_EthernetCommConfig
    __del__ = lambda self: None
EthernetCommConfig_swigregister = _kinova_raw.EthernetCommConfig_swigregister
EthernetCommConfig_swigregister(EthernetCommConfig)


def GetDeviceCount(result):
    return _kinova_raw.GetDeviceCount(result)
GetDeviceCount = _kinova_raw.GetDeviceCount

def InitCommunication():
    return _kinova_raw.InitCommunication()
InitCommunication = _kinova_raw.InitCommunication

def CloseCommunication():
    return _kinova_raw.CloseCommunication()
CloseCommunication = _kinova_raw.CloseCommunication

def SendPacket(packetOut, packetIn, result):
    return _kinova_raw.SendPacket(packetOut, packetIn, result)
SendPacket = _kinova_raw.SendPacket

def ScanForNewDevice():
    return _kinova_raw.ScanForNewDevice()
ScanForNewDevice = _kinova_raw.ScanForNewDevice

def GetDevices(list, result):
    return _kinova_raw.GetDevices(list, result)
GetDevices = _kinova_raw.GetDevices

def SetActiveDevice(device):
    return _kinova_raw.SetActiveDevice(device)
SetActiveDevice = _kinova_raw.SetActiveDevice

def GetActiveDevice(device):
    return _kinova_raw.GetActiveDevice(device)
GetActiveDevice = _kinova_raw.GetActiveDevice

def OpenRS485_Read(PackagesIn, QuantityWanted, ReceivedQtyIn):
    return _kinova_raw.OpenRS485_Read(PackagesIn, QuantityWanted, ReceivedQtyIn)
OpenRS485_Read = _kinova_raw.OpenRS485_Read

def OpenRS485_Write(PackagesOut, QtyToSend, QtySent):
    return _kinova_raw.OpenRS485_Write(PackagesOut, QtyToSend, QtySent)
OpenRS485_Write = _kinova_raw.OpenRS485_Write

def OpenRS485_Activate():
    return _kinova_raw.OpenRS485_Activate()
OpenRS485_Activate = _kinova_raw.OpenRS485_Activate

_kinova_raw.COMM_LAYER_PATH_swigconstant(_kinova_raw)
COMM_LAYER_PATH = _kinova_raw.COMM_LAYER_PATH

_kinova_raw.COMM_LAYER_ETHERNET_PATH_swigconstant(_kinova_raw)
COMM_LAYER_ETHERNET_PATH = _kinova_raw.COMM_LAYER_ETHERNET_PATH

_kinova_raw.ERROR_INIT_API_swigconstant(_kinova_raw)
ERROR_INIT_API = _kinova_raw.ERROR_INIT_API

_kinova_raw.ERROR_LOAD_COMM_DLL_swigconstant(_kinova_raw)
ERROR_LOAD_COMM_DLL = _kinova_raw.ERROR_LOAD_COMM_DLL

_kinova_raw.JACO_NACK_FIRST_swigconstant(_kinova_raw)
JACO_NACK_FIRST = _kinova_raw.JACO_NACK_FIRST

_kinova_raw.JACO_COMM_FAILED_swigconstant(_kinova_raw)
JACO_COMM_FAILED = _kinova_raw.JACO_COMM_FAILED

_kinova_raw.JACO_NACK_NORMAL_swigconstant(_kinova_raw)
JACO_NACK_NORMAL = _kinova_raw.JACO_NACK_NORMAL

_kinova_raw.ERROR_INIT_COMM_METHOD_swigconstant(_kinova_raw)
ERROR_INIT_COMM_METHOD = _kinova_raw.ERROR_INIT_COMM_METHOD

_kinova_raw.ERROR_CLOSE_METHOD_swigconstant(_kinova_raw)
ERROR_CLOSE_METHOD = _kinova_raw.ERROR_CLOSE_METHOD

_kinova_raw.ERROR_GET_DEVICE_COUNT_METHOD_swigconstant(_kinova_raw)
ERROR_GET_DEVICE_COUNT_METHOD = _kinova_raw.ERROR_GET_DEVICE_COUNT_METHOD

_kinova_raw.ERROR_SEND_PACKET_METHOD_swigconstant(_kinova_raw)
ERROR_SEND_PACKET_METHOD = _kinova_raw.ERROR_SEND_PACKET_METHOD

_kinova_raw.ERROR_SET_ACTIVE_DEVICE_METHOD_swigconstant(_kinova_raw)
ERROR_SET_ACTIVE_DEVICE_METHOD = _kinova_raw.ERROR_SET_ACTIVE_DEVICE_METHOD

_kinova_raw.ERROR_GET_DEVICES_LIST_METHOD_swigconstant(_kinova_raw)
ERROR_GET_DEVICES_LIST_METHOD = _kinova_raw.ERROR_GET_DEVICES_LIST_METHOD

_kinova_raw.ERROR_SEMAPHORE_FAILED_swigconstant(_kinova_raw)
ERROR_SEMAPHORE_FAILED = _kinova_raw.ERROR_SEMAPHORE_FAILED

_kinova_raw.ERROR_SCAN_FOR_NEW_DEVICE_swigconstant(_kinova_raw)
ERROR_SCAN_FOR_NEW_DEVICE = _kinova_raw.ERROR_SCAN_FOR_NEW_DEVICE

_kinova_raw.ERROR_GET_ACTIVE_DEVICE_METHOD_swigconstant(_kinova_raw)
ERROR_GET_ACTIVE_DEVICE_METHOD = _kinova_raw.ERROR_GET_ACTIVE_DEVICE_METHOD

_kinova_raw.ERROR_OPEN_RS485_ACTIVATE_swigconstant(_kinova_raw)
ERROR_OPEN_RS485_ACTIVATE = _kinova_raw.ERROR_OPEN_RS485_ACTIVATE

_kinova_raw.ERROR_INVALID_PARAM_swigconstant(_kinova_raw)
ERROR_INVALID_PARAM = _kinova_raw.ERROR_INVALID_PARAM

_kinova_raw.ERROR_API_NOT_INITIALIZED_swigconstant(_kinova_raw)
ERROR_API_NOT_INITIALIZED = _kinova_raw.ERROR_API_NOT_INITIALIZED

_kinova_raw.ERROR_INIT_DATA_STRUCTURES_METHOD_swigconstant(_kinova_raw)
ERROR_INIT_DATA_STRUCTURES_METHOD = _kinova_raw.ERROR_INIT_DATA_STRUCTURES_METHOD

_kinova_raw.CARTESIAN_SIZE_swigconstant(_kinova_raw)
CARTESIAN_SIZE = _kinova_raw.CARTESIAN_SIZE

_kinova_raw.MAX_ACTUATORS_swigconstant(_kinova_raw)
MAX_ACTUATORS = _kinova_raw.MAX_ACTUATORS

_kinova_raw.MAX_INVENTORY_swigconstant(_kinova_raw)
MAX_INVENTORY = _kinova_raw.MAX_INVENTORY

_kinova_raw.CODE_VERSION_COUNT_swigconstant(_kinova_raw)
CODE_VERSION_COUNT = _kinova_raw.CODE_VERSION_COUNT

_kinova_raw.API_VERSION_COUNT_swigconstant(_kinova_raw)
API_VERSION_COUNT = _kinova_raw.API_VERSION_COUNT

_kinova_raw.POSITION_CURRENT_COUNT_swigconstant(_kinova_raw)
POSITION_CURRENT_COUNT = _kinova_raw.POSITION_CURRENT_COUNT

_kinova_raw.POSITION_CURRENT_COUNT_7DOF_swigconstant(_kinova_raw)
POSITION_CURRENT_COUNT_7DOF = _kinova_raw.POSITION_CURRENT_COUNT_7DOF

_kinova_raw.SPASM_FILTER_COUNT_swigconstant(_kinova_raw)
SPASM_FILTER_COUNT = _kinova_raw.SPASM_FILTER_COUNT

_kinova_raw.COMMAND_LAYER_VERSION_swigconstant(_kinova_raw)
COMMAND_LAYER_VERSION = _kinova_raw.COMMAND_LAYER_VERSION

_kinova_raw.COMMAND_SIZE_swigconstant(_kinova_raw)
COMMAND_SIZE = _kinova_raw.COMMAND_SIZE

_kinova_raw.OPTIMAL_Z_PARAM_SIZE_swigconstant(_kinova_raw)
OPTIMAL_Z_PARAM_SIZE = _kinova_raw.OPTIMAL_Z_PARAM_SIZE

_kinova_raw.OPTIMAL_Z_PARAM_SIZE_7DOF_swigconstant(_kinova_raw)
OPTIMAL_Z_PARAM_SIZE_7DOF = _kinova_raw.OPTIMAL_Z_PARAM_SIZE_7DOF

_kinova_raw.GRAVITY_VECTOR_SIZE_swigconstant(_kinova_raw)
GRAVITY_VECTOR_SIZE = _kinova_raw.GRAVITY_VECTOR_SIZE

_kinova_raw.GRAVITY_PARAM_SIZE_swigconstant(_kinova_raw)
GRAVITY_PARAM_SIZE = _kinova_raw.GRAVITY_PARAM_SIZE

_kinova_raw.GRAVITY_PAYLOAD_SIZE_swigconstant(_kinova_raw)
GRAVITY_PAYLOAD_SIZE = _kinova_raw.GRAVITY_PAYLOAD_SIZE

_kinova_raw.IP_ADDRESS_LENGTH_swigconstant(_kinova_raw)
IP_ADDRESS_LENGTH = _kinova_raw.IP_ADDRESS_LENGTH

_kinova_raw.MAC_ADDRESS_LENGTH_swigconstant(_kinova_raw)
MAC_ADDRESS_LENGTH = _kinova_raw.MAC_ADDRESS_LENGTH

def RefresDevicesList():
    return _kinova_raw.RefresDevicesList()
RefresDevicesList = _kinova_raw.RefresDevicesList

def InitAPI():
    return _kinova_raw.InitAPI()
InitAPI = _kinova_raw.InitAPI

def CloseAPI():
    return _kinova_raw.CloseAPI()
CloseAPI = _kinova_raw.CloseAPI

def GetCodeVersion(Response):
    return _kinova_raw.GetCodeVersion(Response)
GetCodeVersion = _kinova_raw.GetCodeVersion

def GetAPIVersion(Response):
    return _kinova_raw.GetAPIVersion(Response)
GetAPIVersion = _kinova_raw.GetAPIVersion

def GetCartesianPosition(Response):
    return _kinova_raw.GetCartesianPosition(Response)
GetCartesianPosition = _kinova_raw.GetCartesianPosition

def GetAngularPosition(Response):
    return _kinova_raw.GetAngularPosition(Response)
GetAngularPosition = _kinova_raw.GetAngularPosition

def GetCartesianForce(Response):
    return _kinova_raw.GetCartesianForce(Response)
GetCartesianForce = _kinova_raw.GetCartesianForce

def GetAngularForce(Response):
    return _kinova_raw.GetAngularForce(Response)
GetAngularForce = _kinova_raw.GetAngularForce

def GetAngularCurrent(Response):
    return _kinova_raw.GetAngularCurrent(Response)
GetAngularCurrent = _kinova_raw.GetAngularCurrent

def GetActualTrajectoryInfo(Response):
    return _kinova_raw.GetActualTrajectoryInfo(Response)
GetActualTrajectoryInfo = _kinova_raw.GetActualTrajectoryInfo

def GetGlobalTrajectoryInfo(Response):
    return _kinova_raw.GetGlobalTrajectoryInfo(Response)
GetGlobalTrajectoryInfo = _kinova_raw.GetGlobalTrajectoryInfo

def GetSensorsInfo(Response):
    return _kinova_raw.GetSensorsInfo(Response)
GetSensorsInfo = _kinova_raw.GetSensorsInfo

def GetSingularityVector(Response):
    return _kinova_raw.GetSingularityVector(Response)
GetSingularityVector = _kinova_raw.GetSingularityVector

def SetAngularControl():
    return _kinova_raw.SetAngularControl()
SetAngularControl = _kinova_raw.SetAngularControl

def SetCartesianControl():
    return _kinova_raw.SetCartesianControl()
SetCartesianControl = _kinova_raw.SetCartesianControl

def StartControlAPI():
    return _kinova_raw.StartControlAPI()
StartControlAPI = _kinova_raw.StartControlAPI

def StopControlAPI():
    return _kinova_raw.StopControlAPI()
StopControlAPI = _kinova_raw.StopControlAPI

def RestoreFactoryDefault():
    return _kinova_raw.RestoreFactoryDefault()
RestoreFactoryDefault = _kinova_raw.RestoreFactoryDefault

def SendJoystickCommand(joystickCommand):
    return _kinova_raw.SendJoystickCommand(joystickCommand)
SendJoystickCommand = _kinova_raw.SendJoystickCommand

def SendAdvanceTrajectory(trajectory):
    return _kinova_raw.SendAdvanceTrajectory(trajectory)
SendAdvanceTrajectory = _kinova_raw.SendAdvanceTrajectory

def SendBasicTrajectory(trajectory):
    return _kinova_raw.SendBasicTrajectory(trajectory)
SendBasicTrajectory = _kinova_raw.SendBasicTrajectory

def GetClientConfigurations(config):
    return _kinova_raw.GetClientConfigurations(config)
GetClientConfigurations = _kinova_raw.GetClientConfigurations

def SetClientConfigurations(config):
    return _kinova_raw.SetClientConfigurations(config)
SetClientConfigurations = _kinova_raw.SetClientConfigurations

def EraseAllTrajectories():
    return _kinova_raw.EraseAllTrajectories()
EraseAllTrajectories = _kinova_raw.EraseAllTrajectories

def GetPositionCurrentActuators(Response):
    return _kinova_raw.GetPositionCurrentActuators(Response)
GetPositionCurrentActuators = _kinova_raw.GetPositionCurrentActuators

def SetActuatorPID(address, P, I, D):
    return _kinova_raw.SetActuatorPID(address, P, I, D)
SetActuatorPID = _kinova_raw.SetActuatorPID

def GetAngularCommand(Response):
    return _kinova_raw.GetAngularCommand(Response)
GetAngularCommand = _kinova_raw.GetAngularCommand

def GetCartesianCommand(Response):
    return _kinova_raw.GetCartesianCommand(Response)
GetCartesianCommand = _kinova_raw.GetCartesianCommand

def GetAngularCurrentMotor(Response):
    return _kinova_raw.GetAngularCurrentMotor(Response)
GetAngularCurrentMotor = _kinova_raw.GetAngularCurrentMotor

def GetAngularVelocity(Response):
    return _kinova_raw.GetAngularVelocity(Response)
GetAngularVelocity = _kinova_raw.GetAngularVelocity

def GetControlType(Response):
    return _kinova_raw.GetControlType(Response)
GetControlType = _kinova_raw.GetControlType

def StartForceControl():
    return _kinova_raw.StartForceControl()
StartForceControl = _kinova_raw.StartForceControl

def StopForceControl():
    return _kinova_raw.StopForceControl()
StopForceControl = _kinova_raw.StopForceControl

def StartRedundantJointNullSpaceMotion():
    return _kinova_raw.StartRedundantJointNullSpaceMotion()
StartRedundantJointNullSpaceMotion = _kinova_raw.StartRedundantJointNullSpaceMotion

def StopRedundantJointNullSpaceMotion():
    return _kinova_raw.StopRedundantJointNullSpaceMotion()
StopRedundantJointNullSpaceMotion = _kinova_raw.StopRedundantJointNullSpaceMotion

def ActivateExtraProtectionPinchingWrist(state):
    return _kinova_raw.ActivateExtraProtectionPinchingWrist(state)
ActivateExtraProtectionPinchingWrist = _kinova_raw.ActivateExtraProtectionPinchingWrist

def ActivateCollisionAutomaticAvoidance(state):
    return _kinova_raw.ActivateCollisionAutomaticAvoidance(state)
ActivateCollisionAutomaticAvoidance = _kinova_raw.ActivateCollisionAutomaticAvoidance

def ActivateSingularityAutomaticAvoidance(state):
    return _kinova_raw.ActivateSingularityAutomaticAvoidance(state)
ActivateSingularityAutomaticAvoidance = _kinova_raw.ActivateSingularityAutomaticAvoidance

def ActivateAutoNullSpaceMotionCartesian(state):
    return _kinova_raw.ActivateAutoNullSpaceMotionCartesian(state)
ActivateAutoNullSpaceMotionCartesian = _kinova_raw.ActivateAutoNullSpaceMotionCartesian

def StartCurrentLimitation():
    return _kinova_raw.StartCurrentLimitation()
StartCurrentLimitation = _kinova_raw.StartCurrentLimitation

def StopCurrentLimitation():
    return _kinova_raw.StopCurrentLimitation()
StopCurrentLimitation = _kinova_raw.StopCurrentLimitation

def GetSystemErrorCount(Response):
    return _kinova_raw.GetSystemErrorCount(Response)
GetSystemErrorCount = _kinova_raw.GetSystemErrorCount

def GetSystemError(indexError, Response):
    return _kinova_raw.GetSystemError(indexError, Response)
GetSystemError = _kinova_raw.GetSystemError

def ClearErrorLog():
    return _kinova_raw.ClearErrorLog()
ClearErrorLog = _kinova_raw.ClearErrorLog

def EraseAllProtectionZones():
    return _kinova_raw.EraseAllProtectionZones()
EraseAllProtectionZones = _kinova_raw.EraseAllProtectionZones

def SetSerialNumber(Command, temp):
    return _kinova_raw.SetSerialNumber(Command, temp)
SetSerialNumber = _kinova_raw.SetSerialNumber

def SetDefaultGravityParam(Command):
    return _kinova_raw.SetDefaultGravityParam(Command)
SetDefaultGravityParam = _kinova_raw.SetDefaultGravityParam

def GetControlMapping(Response):
    return _kinova_raw.GetControlMapping(Response)
GetControlMapping = _kinova_raw.GetControlMapping

def GetProtectionZone(Response):
    return _kinova_raw.GetProtectionZone(Response)
GetProtectionZone = _kinova_raw.GetProtectionZone

def SetProtectionZone(Command):
    return _kinova_raw.SetProtectionZone(Command)
SetProtectionZone = _kinova_raw.SetProtectionZone

def GetGripperStatus(Response):
    return _kinova_raw.GetGripperStatus(Response)
GetGripperStatus = _kinova_raw.GetGripperStatus

def GetQuickStatus(Response):
    return _kinova_raw.GetQuickStatus(Response)
GetQuickStatus = _kinova_raw.GetQuickStatus

def GetForcesInfo(Response):
    return _kinova_raw.GetForcesInfo(Response)
GetForcesInfo = _kinova_raw.GetForcesInfo

def SetControlMapping(Command):
    return _kinova_raw.SetControlMapping(Command)
SetControlMapping = _kinova_raw.SetControlMapping

def ProgramFlash(filename):
    return _kinova_raw.ProgramFlash(filename)
ProgramFlash = _kinova_raw.ProgramFlash

def SetJointZero(ActuatorAdress):
    return _kinova_raw.SetJointZero(ActuatorAdress)
SetJointZero = _kinova_raw.SetJointZero

def SetTorqueZero(ActuatorAdress):
    return _kinova_raw.SetTorqueZero(ActuatorAdress)
SetTorqueZero = _kinova_raw.SetTorqueZero

def SetActuatorPIDFilter(ActuatorAdress, filterP, filterI, filterD):
    return _kinova_raw.SetActuatorPIDFilter(ActuatorAdress, filterP, filterI, filterD)
SetActuatorPIDFilter = _kinova_raw.SetActuatorPIDFilter

def SetActuatorAddress(ActuatorAdress, newAddress):
    return _kinova_raw.SetActuatorAddress(ActuatorAdress, newAddress)
SetActuatorAddress = _kinova_raw.SetActuatorAddress

def GetGeneralInformations(Response):
    return _kinova_raw.GetGeneralInformations(Response)
GetGeneralInformations = _kinova_raw.GetGeneralInformations

def SetFrameType(frameType):
    return _kinova_raw.SetFrameType(frameType)
SetFrameType = _kinova_raw.SetFrameType

def SetCartesianForceMinMax(min, max):
    return _kinova_raw.SetCartesianForceMinMax(min, max)
SetCartesianForceMinMax = _kinova_raw.SetCartesianForceMinMax

def SetCartesianInertiaDamping(inertia, damping):
    return _kinova_raw.SetCartesianInertiaDamping(inertia, damping)
SetCartesianInertiaDamping = _kinova_raw.SetCartesianInertiaDamping

def SetAngularTorqueMinMax(min, max):
    return _kinova_raw.SetAngularTorqueMinMax(min, max)
SetAngularTorqueMinMax = _kinova_raw.SetAngularTorqueMinMax

def SetAngularInertiaDamping(inertia, damping):
    return _kinova_raw.SetAngularInertiaDamping(inertia, damping)
SetAngularInertiaDamping = _kinova_raw.SetAngularInertiaDamping

def SetDevValue(command):
    return _kinova_raw.SetDevValue(command)
SetDevValue = _kinova_raw.SetDevValue

def GetDevValue(Response):
    return _kinova_raw.GetDevValue(Response)
GetDevValue = _kinova_raw.GetDevValue

def SetSpasmFilterValues(Command, activationStatus):
    return _kinova_raw.SetSpasmFilterValues(Command, activationStatus)
SetSpasmFilterValues = _kinova_raw.SetSpasmFilterValues

def GetSpasmFilterValues(Response, activationStatus):
    return _kinova_raw.GetSpasmFilterValues(Response, activationStatus)
GetSpasmFilterValues = _kinova_raw.GetSpasmFilterValues

def MoveHome():
    return _kinova_raw.MoveHome()
MoveHome = _kinova_raw.MoveHome

def GetAngularForceGravityFree(Response):
    return _kinova_raw.GetAngularForceGravityFree(Response)
GetAngularForceGravityFree = _kinova_raw.GetAngularForceGravityFree

def GetActuatorAcceleration(Response):
    return _kinova_raw.GetActuatorAcceleration(Response)
GetActuatorAcceleration = _kinova_raw.GetActuatorAcceleration

def InitFingers():
    return _kinova_raw.InitFingers()
InitFingers = _kinova_raw.InitFingers

def GetPeripheralInventory(list):
    return _kinova_raw.GetPeripheralInventory(list)
GetPeripheralInventory = _kinova_raw.GetPeripheralInventory

def SetModel(Command, temp):
    return _kinova_raw.SetModel(Command, temp)
SetModel = _kinova_raw.SetModel

def GetJoystickValue(joystickCommand):
    return _kinova_raw.GetJoystickValue(joystickCommand)
GetJoystickValue = _kinova_raw.GetJoystickValue

def SetRobotConfiguration(ConfigID):
    return _kinova_raw.SetRobotConfiguration(ConfigID)
SetRobotConfiguration = _kinova_raw.SetRobotConfiguration

def GetCommandVelocity(cartesianVelocity, angularVelocity):
    return _kinova_raw.GetCommandVelocity(cartesianVelocity, angularVelocity)
GetCommandVelocity = _kinova_raw.GetCommandVelocity

def GetEndEffectorOffset(status, x, y, z):
    return _kinova_raw.GetEndEffectorOffset(status, x, y, z)
GetEndEffectorOffset = _kinova_raw.GetEndEffectorOffset

def SetEndEffectorOffset(status, x, y, z):
    return _kinova_raw.SetEndEffectorOffset(status, x, y, z)
SetEndEffectorOffset = _kinova_raw.SetEndEffectorOffset

def SendAngularTorqueCommand(Command):
    return _kinova_raw.SendAngularTorqueCommand(Command)
SendAngularTorqueCommand = _kinova_raw.SendAngularTorqueCommand

def SendCartesianForceCommand(Command):
    return _kinova_raw.SendCartesianForceCommand(Command)
SendCartesianForceCommand = _kinova_raw.SendCartesianForceCommand

def SetTorqueActuatorGain(Command):
    return _kinova_raw.SetTorqueActuatorGain(Command)
SetTorqueActuatorGain = _kinova_raw.SetTorqueActuatorGain

def SetTorqueActuatorDamping(Command):
    return _kinova_raw.SetTorqueActuatorDamping(Command)
SetTorqueActuatorDamping = _kinova_raw.SetTorqueActuatorDamping

def SwitchTrajectoryTorque(type):
    return _kinova_raw.SwitchTrajectoryTorque(type)
SwitchTrajectoryTorque = _kinova_raw.SwitchTrajectoryTorque

def SetTorqueCommandMax(Command):
    return _kinova_raw.SetTorqueCommandMax(Command)
SetTorqueCommandMax = _kinova_raw.SetTorqueCommandMax

def SetTorqueSafetyFactor(factor):
    return _kinova_raw.SetTorqueSafetyFactor(factor)
SetTorqueSafetyFactor = _kinova_raw.SetTorqueSafetyFactor

def SetTorqueGainMax(Command):
    return _kinova_raw.SetTorqueGainMax(Command)
SetTorqueGainMax = _kinova_raw.SetTorqueGainMax

def SetTorqueRateLimiter(Command):
    return _kinova_raw.SetTorqueRateLimiter(Command)
SetTorqueRateLimiter = _kinova_raw.SetTorqueRateLimiter

def SetTorqueFeedCurrent(Command):
    return _kinova_raw.SetTorqueFeedCurrent(Command)
SetTorqueFeedCurrent = _kinova_raw.SetTorqueFeedCurrent

def SetTorqueFeedVelocity(Command):
    return _kinova_raw.SetTorqueFeedVelocity(Command)
SetTorqueFeedVelocity = _kinova_raw.SetTorqueFeedVelocity

def SetTorquePositionLimitDampingGain(Command):
    return _kinova_raw.SetTorquePositionLimitDampingGain(Command)
SetTorquePositionLimitDampingGain = _kinova_raw.SetTorquePositionLimitDampingGain

def SetTorquePositionLimitDampingMax(Command):
    return _kinova_raw.SetTorquePositionLimitDampingMax(Command)
SetTorquePositionLimitDampingMax = _kinova_raw.SetTorquePositionLimitDampingMax

def SetTorquePositionLimitRepulsGain(Command):
    return _kinova_raw.SetTorquePositionLimitRepulsGain(Command)
SetTorquePositionLimitRepulsGain = _kinova_raw.SetTorquePositionLimitRepulsGain

def SetTorquePositionLimitRepulsMax(Command):
    return _kinova_raw.SetTorquePositionLimitRepulsMax(Command)
SetTorquePositionLimitRepulsMax = _kinova_raw.SetTorquePositionLimitRepulsMax

def SetTorqueFilterVelocity(Command):
    return _kinova_raw.SetTorqueFilterVelocity(Command)
SetTorqueFilterVelocity = _kinova_raw.SetTorqueFilterVelocity

def SetTorqueFilterMeasuredTorque(Command):
    return _kinova_raw.SetTorqueFilterMeasuredTorque(Command)
SetTorqueFilterMeasuredTorque = _kinova_raw.SetTorqueFilterMeasuredTorque

def SetTorqueFilterError(Command):
    return _kinova_raw.SetTorqueFilterError(Command)
SetTorqueFilterError = _kinova_raw.SetTorqueFilterError

def SetTorqueFilterControlEffort(Command):
    return _kinova_raw.SetTorqueFilterControlEffort(Command)
SetTorqueFilterControlEffort = _kinova_raw.SetTorqueFilterControlEffort

def SetGravityType(type):
    return _kinova_raw.SetGravityType(type)
SetGravityType = _kinova_raw.SetGravityType

def SetGravityVector(gravityVector):
    return _kinova_raw.SetGravityVector(gravityVector)
SetGravityVector = _kinova_raw.SetGravityVector

def SetGravityOptimalZParam(Command):
    return _kinova_raw.SetGravityOptimalZParam(Command)
SetGravityOptimalZParam = _kinova_raw.SetGravityOptimalZParam

def SetGravityManualInputParam(Command):
    return _kinova_raw.SetGravityManualInputParam(Command)
SetGravityManualInputParam = _kinova_raw.SetGravityManualInputParam

def GetAngularTorqueCommand(Command):
    return _kinova_raw.GetAngularTorqueCommand(Command)
GetAngularTorqueCommand = _kinova_raw.GetAngularTorqueCommand

def GetAngularTorqueGravityEstimation(Command):
    return _kinova_raw.GetAngularTorqueGravityEstimation(Command)
GetAngularTorqueGravityEstimation = _kinova_raw.GetAngularTorqueGravityEstimation

def SetActuatorMaxVelocity(Command):
    return _kinova_raw.SetActuatorMaxVelocity(Command)
SetActuatorMaxVelocity = _kinova_raw.SetActuatorMaxVelocity

def SetSwitchThreshold(Command):
    return _kinova_raw.SetSwitchThreshold(Command)
SetSwitchThreshold = _kinova_raw.SetSwitchThreshold

def SetPositionLimitDistance(Command):
    return _kinova_raw.SetPositionLimitDistance(Command)
SetPositionLimitDistance = _kinova_raw.SetPositionLimitDistance

def SetTorqueControlType(type):
    return _kinova_raw.SetTorqueControlType(type)
SetTorqueControlType = _kinova_raw.SetTorqueControlType

def SetGravityPayload(Command):
    return _kinova_raw.SetGravityPayload(Command)
SetGravityPayload = _kinova_raw.SetGravityPayload

def SetTorqueVibrationController(activationStatus):
    return _kinova_raw.SetTorqueVibrationController(activationStatus)
SetTorqueVibrationController = _kinova_raw.SetTorqueVibrationController

def SetTorqueRobotProtection(protectionLevel):
    return _kinova_raw.SetTorqueRobotProtection(protectionLevel)
SetTorqueRobotProtection = _kinova_raw.SetTorqueRobotProtection

def SetTorqueVelocityLimitFilter(Command):
    return _kinova_raw.SetTorqueVelocityLimitFilter(Command)
SetTorqueVelocityLimitFilter = _kinova_raw.SetTorqueVelocityLimitFilter

def SetTorqueFeedFilter(Command):
    return _kinova_raw.SetTorqueFeedFilter(Command)
SetTorqueFeedFilter = _kinova_raw.SetTorqueFeedFilter

def SetTorqueStaticFriction(Command):
    return _kinova_raw.SetTorqueStaticFriction(Command)
SetTorqueStaticFriction = _kinova_raw.SetTorqueStaticFriction

def SetTorqueErrorDeadband(Command):
    return _kinova_raw.SetTorqueErrorDeadband(Command)
SetTorqueErrorDeadband = _kinova_raw.SetTorqueErrorDeadband

def SetTorqueBrake(Command):
    return _kinova_raw.SetTorqueBrake(Command)
SetTorqueBrake = _kinova_raw.SetTorqueBrake

def SetTorqueInactivityTimeActuator(Command):
    return _kinova_raw.SetTorqueInactivityTimeActuator(Command)
SetTorqueInactivityTimeActuator = _kinova_raw.SetTorqueInactivityTimeActuator

def SetTorqueInactivityTimeMainController(time):
    return _kinova_raw.SetTorqueInactivityTimeMainController(time)
SetTorqueInactivityTimeMainController = _kinova_raw.SetTorqueInactivityTimeMainController

def SetTorqueDampingMax(Command):
    return _kinova_raw.SetTorqueDampingMax(Command)
SetTorqueDampingMax = _kinova_raw.SetTorqueDampingMax

def SetTorqueFeedVelocityUnderGain(Command):
    return _kinova_raw.SetTorqueFeedVelocityUnderGain(Command)
SetTorqueFeedVelocityUnderGain = _kinova_raw.SetTorqueFeedVelocityUnderGain

def SetTorqueFeedCurrentVoltage(Command):
    return _kinova_raw.SetTorqueFeedCurrentVoltage(Command)
SetTorqueFeedCurrentVoltage = _kinova_raw.SetTorqueFeedCurrentVoltage

def SetTorqueStaticFrictionMax(Command):
    return _kinova_raw.SetTorqueStaticFrictionMax(Command)
SetTorqueStaticFrictionMax = _kinova_raw.SetTorqueStaticFrictionMax

def SetTorqueErrorResend(Command):
    return _kinova_raw.SetTorqueErrorResend(Command)
SetTorqueErrorResend = _kinova_raw.SetTorqueErrorResend

def RunGravityZEstimationSequence(type, OptimalzParam):
    return _kinova_raw.RunGravityZEstimationSequence(type, OptimalzParam)
RunGravityZEstimationSequence = _kinova_raw.RunGravityZEstimationSequence

def RunGravityZEstimationSequence7DOF(type, OptimalzParam):
    return _kinova_raw.RunGravityZEstimationSequence7DOF(type, OptimalzParam)
RunGravityZEstimationSequence7DOF = _kinova_raw.RunGravityZEstimationSequence7DOF

def GetTrajectoryTorqueMode(arg1):
    return _kinova_raw.GetTrajectoryTorqueMode(arg1)
GetTrajectoryTorqueMode = _kinova_raw.GetTrajectoryTorqueMode

def SetTorqueInactivityType(arg1):
    return _kinova_raw.SetTorqueInactivityType(arg1)
SetTorqueInactivityType = _kinova_raw.SetTorqueInactivityType

def SetLocalMACAddress(mac, temp):
    return _kinova_raw.SetLocalMACAddress(mac, temp)
SetLocalMACAddress = _kinova_raw.SetLocalMACAddress
class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _kinova_raw.delete_SwigPyIterator
    __del__ = lambda self: None

    def value(self):
        return _kinova_raw.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _kinova_raw.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _kinova_raw.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _kinova_raw.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _kinova_raw.SwigPyIterator_equal(self, x)

    def copy(self):
        return _kinova_raw.SwigPyIterator_copy(self)

    def next(self):
        return _kinova_raw.SwigPyIterator_next(self)

    def __next__(self):
        return _kinova_raw.SwigPyIterator___next__(self)

    def previous(self):
        return _kinova_raw.SwigPyIterator_previous(self)

    def advance(self, n):
        return _kinova_raw.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _kinova_raw.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _kinova_raw.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _kinova_raw.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _kinova_raw.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _kinova_raw.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _kinova_raw.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self
SwigPyIterator_swigregister = _kinova_raw.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

class IntVector(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def iterator(self):
        return _kinova_raw.IntVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _kinova_raw.IntVector___nonzero__(self)

    def __bool__(self):
        return _kinova_raw.IntVector___bool__(self)

    def __len__(self):
        return _kinova_raw.IntVector___len__(self)

    def __getslice__(self, i, j):
        return _kinova_raw.IntVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _kinova_raw.IntVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _kinova_raw.IntVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _kinova_raw.IntVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _kinova_raw.IntVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _kinova_raw.IntVector___setitem__(self, *args)

    def pop(self):
        return _kinova_raw.IntVector_pop(self)

    def append(self, x):
        return _kinova_raw.IntVector_append(self, x)

    def empty(self):
        return _kinova_raw.IntVector_empty(self)

    def size(self):
        return _kinova_raw.IntVector_size(self)

    def swap(self, v):
        return _kinova_raw.IntVector_swap(self, v)

    def begin(self):
        return _kinova_raw.IntVector_begin(self)

    def end(self):
        return _kinova_raw.IntVector_end(self)

    def rbegin(self):
        return _kinova_raw.IntVector_rbegin(self)

    def rend(self):
        return _kinova_raw.IntVector_rend(self)

    def clear(self):
        return _kinova_raw.IntVector_clear(self)

    def get_allocator(self):
        return _kinova_raw.IntVector_get_allocator(self)

    def pop_back(self):
        return _kinova_raw.IntVector_pop_back(self)

    def erase(self, *args):
        return _kinova_raw.IntVector_erase(self, *args)

    def __init__(self, *args):
        this = _kinova_raw.new_IntVector(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def push_back(self, x):
        return _kinova_raw.IntVector_push_back(self, x)

    def front(self):
        return _kinova_raw.IntVector_front(self)

    def back(self):
        return _kinova_raw.IntVector_back(self)

    def assign(self, n, x):
        return _kinova_raw.IntVector_assign(self, n, x)

    def resize(self, *args):
        return _kinova_raw.IntVector_resize(self, *args)

    def insert(self, *args):
        return _kinova_raw.IntVector_insert(self, *args)

    def reserve(self, n):
        return _kinova_raw.IntVector_reserve(self, n)

    def capacity(self):
        return _kinova_raw.IntVector_capacity(self)
    __swig_destroy__ = _kinova_raw.delete_IntVector
    __del__ = lambda self: None
IntVector_swigregister = _kinova_raw.IntVector_swigregister
IntVector_swigregister(IntVector)

class DoubleVector(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def iterator(self):
        return _kinova_raw.DoubleVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _kinova_raw.DoubleVector___nonzero__(self)

    def __bool__(self):
        return _kinova_raw.DoubleVector___bool__(self)

    def __len__(self):
        return _kinova_raw.DoubleVector___len__(self)

    def __getslice__(self, i, j):
        return _kinova_raw.DoubleVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _kinova_raw.DoubleVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _kinova_raw.DoubleVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _kinova_raw.DoubleVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _kinova_raw.DoubleVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _kinova_raw.DoubleVector___setitem__(self, *args)

    def pop(self):
        return _kinova_raw.DoubleVector_pop(self)

    def append(self, x):
        return _kinova_raw.DoubleVector_append(self, x)

    def empty(self):
        return _kinova_raw.DoubleVector_empty(self)

    def size(self):
        return _kinova_raw.DoubleVector_size(self)

    def swap(self, v):
        return _kinova_raw.DoubleVector_swap(self, v)

    def begin(self):
        return _kinova_raw.DoubleVector_begin(self)

    def end(self):
        return _kinova_raw.DoubleVector_end(self)

    def rbegin(self):
        return _kinova_raw.DoubleVector_rbegin(self)

    def rend(self):
        return _kinova_raw.DoubleVector_rend(self)

    def clear(self):
        return _kinova_raw.DoubleVector_clear(self)

    def get_allocator(self):
        return _kinova_raw.DoubleVector_get_allocator(self)

    def pop_back(self):
        return _kinova_raw.DoubleVector_pop_back(self)

    def erase(self, *args):
        return _kinova_raw.DoubleVector_erase(self, *args)

    def __init__(self, *args):
        this = _kinova_raw.new_DoubleVector(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def push_back(self, x):
        return _kinova_raw.DoubleVector_push_back(self, x)

    def front(self):
        return _kinova_raw.DoubleVector_front(self)

    def back(self):
        return _kinova_raw.DoubleVector_back(self)

    def assign(self, n, x):
        return _kinova_raw.DoubleVector_assign(self, n, x)

    def resize(self, *args):
        return _kinova_raw.DoubleVector_resize(self, *args)

    def insert(self, *args):
        return _kinova_raw.DoubleVector_insert(self, *args)

    def reserve(self, n):
        return _kinova_raw.DoubleVector_reserve(self, n)

    def capacity(self):
        return _kinova_raw.DoubleVector_capacity(self)
    __swig_destroy__ = _kinova_raw.delete_DoubleVector
    __del__ = lambda self: None
DoubleVector_swigregister = _kinova_raw.DoubleVector_swigregister
DoubleVector_swigregister(DoubleVector)


def new_floatArray(nelements):
    return _kinova_raw.new_floatArray(nelements)
new_floatArray = _kinova_raw.new_floatArray

def delete_floatArray(ary):
    return _kinova_raw.delete_floatArray(ary)
delete_floatArray = _kinova_raw.delete_floatArray

def floatArray_getitem(ary, index):
    return _kinova_raw.floatArray_getitem(ary, index)
floatArray_getitem = _kinova_raw.floatArray_getitem

def floatArray_setitem(ary, index, value):
    return _kinova_raw.floatArray_setitem(ary, index, value)
floatArray_setitem = _kinova_raw.floatArray_setitem


